/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package segta.formularios;

import java.awt.Component;
import java.awt.event.WindowEvent;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import segta.clases.Cliente;
import segta.clases.Color;
import segta.clases.Contrato;
import segta.clases.Lote;
import segta.controladores.ContratoJpaController;
import segta.controladores.LoteJpaController;
import segta.controladores.exceptions.NonexistentEntityException;

/**
 *
 * @author MODERNIZACION3
 */
public class JDialogContrato extends javax.swing.JDialog {

    /**
     * Creates new form JDialogContrato
     */
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("SegTAPU");
    EntityManager em = emf.createEntityManager();
    ContratoJpaController controladorC = new ContratoJpaController(emf);
    LoteJpaController controladorL = new LoteJpaController(emf);
    Contrato contrato;
    String control;
    int idContrato;
    Boolean verdadero = true;
    String mercado;

    public JDialogContrato(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        desactivarDatos();
        jCBExterno.setSelected(true);
        actualizarTabla();
        DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
        tcr.setHorizontalAlignment(SwingConstants.CENTER);
        jTableContrato.getColumnModel().getColumn(0).setCellRenderer(tcr);
        jTableContrato.getColumnModel().getColumn(1).setCellRenderer(tcr);
        //jTableContrato.getColumnModel().getColumn(2).setCellRenderer(tcr);    
        //jTableContrato.getColumnModel().getColumn(3).setCellRenderer(tcr);

        jCBCliente.setRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                if (value instanceof Cliente) {
                    Cliente tc = (Cliente) value;
                    return super.getListCellRendererComponent(list, tc.getRazonSocial(), index, isSelected, cellHasFocus); //To change body of generated methods, choose Tools | Templates.

                }
                return super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus); //To change body of generated methods, choose Tools | Templates.
            }

        });
        jCBCliente.setRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                if (value instanceof Color) {
                    Color tc = (Color) value;
                    return super.getListCellRendererComponent(list, tc.getColor(), index, isSelected, cellHasFocus); //To change body of generated methods, choose Tools | Templates.

                }
                return super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus); //To change body of generated methods, choose Tools | Templates.
            }

        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        SegTAPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("SegTAPU").createEntityManager();
        clienteQuery1 = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT c FROM Cliente c ORDER BY c.razonSocial");
        clienteList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : clienteQuery1.getResultList();
        contratoQuery = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT c FROM Contrato c ORDER BY c.idContrato DESC");
        contratoList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(contratoQuery.getResultList());
        clienteQuery2 = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT c FROM Cliente c ORDER BY c.razonSocial");
        clienteList2 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : clienteQuery2.getResultList();
        Mercado = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanelDatos = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTFContrato = new javax.swing.JTextField();
        jCBHomo = new javax.swing.JCheckBox();
        jCBTamborNuevo = new javax.swing.JCheckBox();
        jCBCliente = new javax.swing.JComboBox<>();
        jBCancelar = new javax.swing.JButton();
        jBAceptar = new javax.swing.JButton();
        jCBInterno = new javax.swing.JRadioButton();
        jCBExterno = new javax.swing.JRadioButton();
        jBVolver = new javax.swing.JButton();
        jPanelTabla = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableContrato = new javax.swing.JTable();
        jBEditar = new javax.swing.JButton();
        jBAgregar = new javax.swing.JButton();
        jBBorrar = new javax.swing.JButton();
        jBSeleccionarLotes = new javax.swing.JButton();
        jBDeterminaciones = new javax.swing.JButton();
        jTextFieldContrato = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxCliente = new javax.swing.JComboBox<>();
        jBBusqueda = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        Cliente cl = new Cliente();
        cl.setRazonSocial("Todos");
        clienteList2.add(0,cl);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CONTRATOS");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelDatos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setText("CLIENTE");

        jLabel4.setText("CONTRATO");

        jCBHomo.setText("HOMOGENEIZADA");

        jCBTamborNuevo.setText("TAMBOR NUEVO");
        jCBTamborNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBTamborNuevoActionPerformed(evt);
            }
        });

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, clienteList1, jCBCliente);
        bindingGroup.addBinding(jComboBoxBinding);

        jBCancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/cancerlar.png"))); // NOI18N
        jBCancelar.setText("CANCELAR");
        jBCancelar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        jBAceptar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/aceptar.png"))); // NOI18N
        jBAceptar.setText("ACEPTAR");
        jBAceptar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAceptarActionPerformed(evt);
            }
        });

        Mercado.add(jCBInterno);
        jCBInterno.setText("INTERNO");

        Mercado.add(jCBExterno);
        jCBExterno.setText("EXTERNO");

        javax.swing.GroupLayout jPanelDatosLayout = new javax.swing.GroupLayout(jPanelDatos);
        jPanelDatos.setLayout(jPanelDatosLayout);
        jPanelDatosLayout.setHorizontalGroup(
            jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosLayout.createSequentialGroup()
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel4)
                        .addGap(21, 21, 21)
                        .addComponent(jTFContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCBCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(jCBInterno)
                        .addGap(44, 44, 44)
                        .addComponent(jCBExterno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCBTamborNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCBHomo, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelDatosLayout.setVerticalGroup(
            jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosLayout.createSequentialGroup()
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTFContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCBCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCBTamborNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCBHomo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCBInterno)
                            .addComponent(jCBExterno))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jBVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/volver icono.png"))); // NOI18N
        jBVolver.setText("VOLVER");
        jBVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVolverActionPerformed(evt);
            }
        });

        jPanelTabla.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, contratoList, jTableContrato);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${numero}"));
        columnBinding.setColumnName("Numero");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idCliente.razonSocial}"));
        columnBinding.setColumnName("Cliente");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tamborNuevo}"));
        columnBinding.setColumnName("Tambor Nuevo");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${homogeneizada}"));
        columnBinding.setColumnName("Homogeneizada");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${estado}"));
        columnBinding.setColumnName("Estado");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${mercado}"));
        columnBinding.setColumnName("Mercado");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jTableContrato.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableContratoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableContrato);

        jBEditar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/editar.png"))); // NOI18N
        jBEditar.setText("EDITAR");
        jBEditar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditarActionPerformed(evt);
            }
        });

        jBAgregar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/add icono.png"))); // NOI18N
        jBAgregar.setText("AGREGAR");
        jBAgregar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAgregarActionPerformed(evt);
            }
        });

        jBBorrar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/borrar.png"))); // NOI18N
        jBBorrar.setText("BORRAR");
        jBBorrar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBorrarActionPerformed(evt);
            }
        });

        jBSeleccionarLotes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/cargar lotes.png"))); // NOI18N
        jBSeleccionarLotes.setText("ITEMS");
        jBSeleccionarLotes.setToolTipText("ITEMS");
        jBSeleccionarLotes.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBSeleccionarLotes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSeleccionarLotesActionPerformed(evt);
            }
        });

        jBDeterminaciones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/analisis icono.png"))); // NOI18N
        jBDeterminaciones.setText("DETERMINACIONES");
        jBDeterminaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDeterminacionesActionPerformed(evt);
            }
        });

        jTextFieldContrato.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel5.setText("CONTRATO");

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, clienteList2, jComboBoxCliente);
        bindingGroup.addBinding(jComboBoxBinding);

        jBBusqueda.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBBusqueda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/buscar icono.png"))); // NOI18N
        jBBusqueda.setText("BUSCAR");
        jBBusqueda.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBusquedaActionPerformed(evt);
            }
        });

        jLabel6.setText("CLIENTE");

        javax.swing.GroupLayout jPanelTablaLayout = new javax.swing.GroupLayout(jPanelTabla);
        jPanelTabla.setLayout(jPanelTablaLayout);
        jPanelTablaLayout.setHorizontalGroup(
            jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTablaLayout.createSequentialGroup()
                .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTablaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanelTablaLayout.createSequentialGroup()
                                .addComponent(jBSeleccionarLotes, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBDeterminaciones)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanelTablaLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 666, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                        .addComponent(jBBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelTablaLayout.setVerticalGroup(
            jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTablaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBoxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldContrato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBSeleccionarLotes, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBDeterminaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jBSeleccionarLotes.getAccessibleContext().setAccessibleName("COMPLETAR DATOS \nDE LOTES");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanelTabla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanelDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelTabla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 1270, 640));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/fondo dialog.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void actualizarTabla() {
        jTFContrato.setText("");
        jCBTamborNuevo.setSelected(false);
        jCBHomo.setSelected(false);
        
        jCBInterno.setSelected(false);
        activarTabla();
        contratoList.clear();
        contratoList.addAll(contratoQuery.getResultList());

    }

    private void activarDatos() {
        for (Component component : jPanelDatos.getComponents()) {
            component.setEnabled(true);
        }
    }

    private void desactivarDatos() {
        for (Component component : jPanelDatos.getComponents()) {
            component.setEnabled(false);
        }
    }

    private void activarTabla() {
        for (Component component : jPanelTabla.getComponents()) {
            component.setEnabled(true);
        }
        this.jTableContrato.setEnabled(true);
    }

    private void desactivarTabla() {
        for (Component component : jPanelTabla.getComponents()) {
            component.setEnabled(false);
        }
        this.jTableContrato.setEnabled(false);
    }
    private void jCBTamborNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBTamborNuevoActionPerformed
    }//GEN-LAST:event_jCBTamborNuevoActionPerformed

    private void jBVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVolverActionPerformed
        this.processWindowEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_jBVolverActionPerformed

    private void jBBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBorrarActionPerformed

        if (this.jTableContrato.getSelectedRowCount() == 1) {
            contrato = contratoList.get(jTableContrato.getSelectedRow());
            List<Lote> listaL = controladorL.findLoteEntities();
            if (listaL.contains(contrato)) {

                JOptionPane.showMessageDialog(rootPane, "No se puede eliminar el contrato - Contratos asociados");
                actualizarTabla();

            } else if (JOptionPane.showConfirmDialog(null, "Desea Eliminar", null, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {

                try {
                    controladorC.destroy(contrato.getIdContrato());
                    JOptionPane.showMessageDialog(null, "Contrato eliminado");
                    actualizarTabla();

                } catch (Exception ex) {
                    Logger.getLogger(jDialogDescargas.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                actualizarTabla();
            }

        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una Contrato", "Validación", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jBBorrarActionPerformed

    private void jBEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditarActionPerformed

        if (this.jTableContrato.getSelectedRowCount() == 1) {
            contrato = contratoList.get(jTableContrato.getSelectedRow());
            control = "editar";
            desactivarTabla();
            activarDatos();
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una Contrato", "Validación", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jBEditarActionPerformed

    private void jBAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAgregarActionPerformed

        activarDatos();
        desactivarTabla();
        jTFContrato.setText("");
        jCBTamborNuevo.setSelected(false);
        jCBHomo.setSelected(false);
        control = "agregar";

    }//GEN-LAST:event_jBAgregarActionPerformed

    private void jBAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAceptarActionPerformed

        if (jTFContrato.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Completar Numero de Contrato");
            jTFContrato.requestFocus();
        } else {

            Cliente clienteSel = (Cliente) jCBCliente.getSelectedItem();
            if (control == "agregar") {

                Contrato nuevoContrato = new Contrato();
                nuevoContrato.setNumero(jTFContrato.getText());
                nuevoContrato.setIdCliente(clienteSel);
                if (jCBHomo.isSelected()) {
                    nuevoContrato.setHomogeneizada(true);
                } else {
                    nuevoContrato.setHomogeneizada(false);
                }
                if (jCBTamborNuevo.isSelected()) {
                    nuevoContrato.setTamborNuevo(true);
                } else {
                    nuevoContrato.setTamborNuevo(false);
                }
                if (jCBInterno.isSelected()) {
                    mercado = "interno";
                }
                if (jCBExterno.isSelected()) {
                    mercado = "Externo";
                }
                nuevoContrato.setMercado(mercado);

                try {
                    controladorC.create(nuevoContrato);
                    JOptionPane.showMessageDialog(null, "Contrato agregado");
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Error al agregar contrato");
                }

            } else if (control == "editar") {

                contrato.setNumero(jTFContrato.getText());
                contrato.setIdCliente(clienteSel);
                if (jCBHomo.isSelected()) {
                    contrato.setHomogeneizada(true);
                } else {
                    contrato.setHomogeneizada(false);
                }
                if (jCBTamborNuevo.isSelected()) {
                    contrato.setTamborNuevo(true);
                } else {
                    contrato.setTamborNuevo(false);
                }
                if (jCBInterno.isSelected()) {
                    mercado = "interno";
                }
                if (jCBExterno.isSelected()) {
                    mercado = "Externo";
                }
                contrato.setMercado(mercado);
                try {
                    controladorC.edit(contrato);
                    JOptionPane.showMessageDialog(null, "Contrato actualizado");

                } catch (NonexistentEntityException ex) {
                    JOptionPane.showMessageDialog(null, "Error al actualizar el contrato");
                    Logger.getLogger(jDialogDescargas.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Error al actualizar el contrato");
                    Logger.getLogger(jDialogDescargas.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
            jTFContrato.setText("");
            desactivarDatos();
            activarTabla();
            actualizarTabla();

        }
    }//GEN-LAST:event_jBAceptarActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed

        actualizarTabla();
        desactivarDatos();
        activarTabla();
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jBSeleccionarLotesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSeleccionarLotesActionPerformed

        if (this.jTableContrato.getSelectedRowCount() != 1) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un Contrato");
            jTableContrato.requestFocus();

        } else {
            contrato = contratoList.get(jTableContrato.getSelectedRow());
            new JDialogLoteoContrato(this, false, contrato).setVisible(true);
            ejecutaBusqueda();
        }
    }//GEN-LAST:event_jBSeleccionarLotesActionPerformed

    private void jTableContratoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableContratoMouseClicked
        contrato = contratoList.get(jTableContrato.getSelectedRow());
        idContrato = contrato.getIdContrato();
        this.jTFContrato.setText(contrato.getNumero() + "");
        this.jCBCliente.setSelectedItem(contrato.getIdCliente());
        if (contrato.getHomogeneizada()) {
            this.jCBHomo.setSelected(true);
        } else {
            this.jCBHomo.setSelected(false);
        }
        if (contrato.getMercado() == "interno") {
            this.jCBInterno.setSelected(true);
        } else {
            this.jCBExterno.setSelected(true);
        }
        if (!contrato.getTamborNuevo()) {
            this.jCBTamborNuevo.setSelected(false);
        } else {
            this.jCBTamborNuevo.setSelected(true);
        }
//        this.dCCfecha.setText(contrato.getFechaEntrega().toString());

    }//GEN-LAST:event_jTableContratoMouseClicked

    private void jBDeterminacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDeterminacionesActionPerformed
        if (this.jTableContrato.getSelectedRowCount() != 1) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un Contrato");
            jTableContrato.requestFocus();

        } else {
            contrato = contratoList.get(jTableContrato.getSelectedRow());
            new JDialogDeterminacionesContrato(this, true, contrato).setVisible(true);
        }
    }//GEN-LAST:event_jBDeterminacionesActionPerformed

    private void jBBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBusquedaActionPerformed
        ejecutaBusqueda();
    }//GEN-LAST:event_jBBusquedaActionPerformed

    private void ejecutaBusqueda() {
        // TODO add your handling code here:
        Cliente cliSel = clienteList2.get(this.jComboBoxCliente.getSelectedIndex());
        Query ql;
        String queryTxt = "SELECT c FROM Contrato c WHERE 1=1";

        if (!this.jTextFieldContrato.getText().isEmpty()) {
            String numero = this.jTextFieldContrato.getText();
            queryTxt = queryTxt + " AND c.numero like '%" + numero + "%'";
        }

        if (!cliSel.getRazonSocial().equals("Todos")) {
            queryTxt = queryTxt + " AND c.idCliente = :pCliente ";
        }
        queryTxt = queryTxt + " ORDER BY c.idContrato DESC ";

        ql = em.createQuery(queryTxt);

        if (!cliSel.getRazonSocial().equals("Todos")) {
            ql.setParameter("pCliente", cliSel);
        }

        contratoQuery = java.beans.Beans.isDesignTime() ? null : ql;
        List aux = contratoQuery.getResultList();
//        String est=this.jCBEstadoBusq.getSelectedItem().toString();
//        
//        if (est.equals("Pendientes")){
//           Iterator it = aux.iterator();
//           while (it.hasNext()) {
//                
//            }
//            
//        }else if (est.equals("Cerrados")){
//            
//        }                       
        contratoList.clear();
        contratoList.addAll(aux);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup Mercado;
    private javax.persistence.EntityManager SegTAPUEntityManager;
    private java.util.List<segta.clases.Cliente> clienteList1;
    private java.util.List<segta.clases.Cliente> clienteList2;
    private javax.persistence.Query clienteQuery1;
    private javax.persistence.Query clienteQuery2;
    private java.util.List<segta.clases.Contrato> contratoList;
    private javax.persistence.Query contratoQuery;
    private javax.swing.JButton jBAceptar;
    private javax.swing.JButton jBAgregar;
    private javax.swing.JButton jBBorrar;
    private javax.swing.JButton jBBusqueda;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBDeterminaciones;
    private javax.swing.JButton jBEditar;
    private javax.swing.JButton jBSeleccionarLotes;
    private javax.swing.JButton jBVolver;
    private javax.swing.JComboBox<String> jCBCliente;
    private javax.swing.JRadioButton jCBExterno;
    private javax.swing.JCheckBox jCBHomo;
    private javax.swing.JRadioButton jCBInterno;
    private javax.swing.JCheckBox jCBTamborNuevo;
    private javax.swing.JComboBox<String> jComboBoxCliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelDatos;
    private javax.swing.JPanel jPanelTabla;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFContrato;
    private javax.swing.JTable jTableContrato;
    private javax.swing.JTextField jTextFieldContrato;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
