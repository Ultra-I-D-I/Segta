/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package segta.formularios;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import segta.clases.Cliente;
import segta.clases.Lote;
import segta.clases.Contrato;
import segta.clases.Lotecontrato;
import segta.controladores.LoteJpaController;
import segta.controladores.TamborJpaController;
import segta.controladores.exceptions.NonexistentEntityException;

/**
 *
 * @author MODERNIZACION3
 */
public class jDialogLotes extends javax.swing.JDialog {

    public Lote lote;

    /**
     * Creates new form JDialogLotes1
     */
    public static void centerComponent(Component c) {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = c.getSize();

        if (frameSize.height > screenSize.height) {
            frameSize.height = screenSize.height;
        }

        if (frameSize.width > screenSize.width) {
            frameSize.width = screenSize.width;
        }
        c.setLocation((screenSize.width - frameSize.width) / 2,
                (screenSize.height - frameSize.height) / 2);
    }
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("SegTAPU");
    EntityManager em = emf.createEntityManager();
    LoteJpaController controladorL = new LoteJpaController(emf);
    TamborJpaController controladorT = new TamborJpaController(emf);

    String control;
    Lotecontrato contrato;
    float sumaNeto = 0;

    public jDialogLotes(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        jCBCliente.setRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                if (value instanceof Cliente) {
                    Cliente tc = (Cliente) value;
                    return super.getListCellRendererComponent(list, tc.getRazonSocial(), index, isSelected, cellHasFocus); //To change body of generated methods, choose Tools | Templates.

                }
                return super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus); //To change body of generated methods, choose Tools | Templates.
            }

        });
        loteList.clear();
        desactivarDatos();
        DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
        tcr.setHorizontalAlignment(SwingConstants.CENTER);
        jTableLote.getColumnModel().getColumn(0).setCellRenderer(tcr);
        jTableLote.getColumnModel().getColumn(1).setCellRenderer(tcr);
        jTableLote.getColumnModel().getColumn(3).setCellRenderer(tcr);
        jTableLote.getColumnModel().getColumn(4).setCellRenderer(tcr);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        SegTAPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("SegTAPU").createEntityManager();
        lotecontratoQuery = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT l FROM Lotecontrato l WHERE l.estado='abierto'");
        lotecontratoList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(lotecontratoQuery.getResultList());
        clienteQuery = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT c FROM Cliente c ORDER BY c.razonSocial");
        clienteList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : clienteQuery.getResultList();
        mercado = new javax.swing.ButtonGroup();
        contratoQuery = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT c FROM Contrato c");
        contratoList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : contratoQuery.getResultList();
        loteQuery = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT l FROM Lote l");
        loteList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() :  org.jdesktop.observablecollections.ObservableCollections.observableList(loteQuery.getResultList());
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableContrato = new javax.swing.JTable();
        jCBCliente = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jBBuscar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jCBMercado = new javax.swing.JComboBox<>();
        jPanelTabla = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableLote = new javax.swing.JTable();
        jBAgregar = new javax.swing.JButton();
        jBEditar = new javax.swing.JButton();
        jBBorrar = new javax.swing.JButton();
        jBDespacho = new javax.swing.JButton();
        jBSeleccionarTambores = new javax.swing.JButton();
        jBAnalisis = new javax.swing.JButton();
        jPanelDatos = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTFNumeroLote = new javax.swing.JTextField();
        jTFDescripcion = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jBAceptar = new javax.swing.JButton();
        jBCancelar = new javax.swing.JButton();
        jBAnalisis1 = new javax.swing.JButton();
        jBVolver = new javax.swing.JButton();
        jDialogDescargasFondo = new javax.swing.JLabel();

        Cliente cl = new Cliente();
        cl.setRazonSocial("Todos");
        clienteList.add(0,cl);

        Contrato c = new Contrato();
        c.setMercado("todos");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("LOTES");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contratos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jTableContrato.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, lotecontratoList, jTableContrato);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idContrato.numero}"));
        columnBinding.setColumnName("Contrato");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${item}"));
        columnBinding.setColumnName("Item");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idContrato.idCliente.razonSocial}"));
        columnBinding.setColumnName("Cliente");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${color}"));
        columnBinding.setColumnName("Color");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idContrato.homogeneizada}"));
        columnBinding.setColumnName("Homogeneizada");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idContrato.tamborNuevo}"));
        columnBinding.setColumnName("Tambor Nuevo");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cantLotes}"));
        columnBinding.setColumnName("Contenedores");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${maxTambores}"));
        columnBinding.setColumnName("Neto");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fechaEntrega}"));
        columnBinding.setColumnName("Fecha Entrega");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idContrato.mercado}"));
        columnBinding.setColumnName("Mercado");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jTableContrato.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableContratoMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableContratoMouseReleased(evt);
            }
        });
        jTableContrato.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableContratoKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTableContrato);

        jCBCliente.addItem("Todos");

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, clienteList, jCBCliente);
        bindingGroup.addBinding(jComboBoxBinding);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("CLIENTE");

        jBBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/buscar icono.png"))); // NOI18N
        jBBuscar.setText("BUSCAR");
        jBBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("CONTRATO");

        jCBMercado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Interno", "Externo", " " }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCBCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCBMercado, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jBBuscar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jCBCliente)
                    .addComponent(jBBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4)
                    .addComponent(jCBMercado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanelTabla.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lotes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jTableLote.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, loteList, jTableLote);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${lote}"));
        columnBinding.setColumnName("Lote");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${netoLote}"));
        columnBinding.setColumnName("Neto");
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${despacho}"));
        columnBinding.setColumnName("Despacho");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${remito}"));
        columnBinding.setColumnName("Remito");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cantTambores}"));
        columnBinding.setColumnName("Tambores");
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${camion}"));
        columnBinding.setColumnName("Camion");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${descripcion}"));
        columnBinding.setColumnName("Descripcion");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jTableLote.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableLoteMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableLoteMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableLoteMouseReleased(evt);
            }
        });
        jTableLote.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableLoteKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTableLote);

        jBAgregar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/add icono.png"))); // NOI18N
        jBAgregar.setText("AGREGAR");
        jBAgregar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAgregarActionPerformed(evt);
            }
        });

        jBEditar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/editar.png"))); // NOI18N
        jBEditar.setText("EDITAR");
        jBEditar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditarActionPerformed(evt);
            }
        });

        jBBorrar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/borrar.png"))); // NOI18N
        jBBorrar.setText("BORRAR");
        jBBorrar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBorrarActionPerformed(evt);
            }
        });

        jBDespacho.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBDespacho.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/despacho incono.png"))); // NOI18N
        jBDespacho.setText("DESPACHO");
        jBDespacho.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBDespacho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDespachoActionPerformed(evt);
            }
        });

        jBSeleccionarTambores.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBSeleccionarTambores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/tambor.png"))); // NOI18N
        jBSeleccionarTambores.setText("TAMBORES");
        jBSeleccionarTambores.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBSeleccionarTambores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSeleccionarTamboresActionPerformed(evt);
            }
        });

        jBAnalisis.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBAnalisis.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/analisis icono.png"))); // NOI18N
        jBAnalisis.setText("ANALISIS");
        jBAnalisis.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBAnalisis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAnalisisActionPerformed(evt);
            }
        });

        jPanelDatos.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("NUMERO DE LOTE");

        jTFNumeroLote.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jTFDescripcion.setColumns(20);
        jTFDescripcion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTFDescripcion.setRows(5);
        jTFDescripcion.setAutoscrolls(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("DESCRIPCION");

        jBAceptar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/aceptar.png"))); // NOI18N
        jBAceptar.setText("ACEPTAR");
        jBAceptar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAceptarActionPerformed(evt);
            }
        });

        jBCancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/cancerlar.png"))); // NOI18N
        jBCancelar.setText("CANCELAR");
        jBCancelar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelDatosLayout = new javax.swing.GroupLayout(jPanelDatos);
        jPanelDatos.setLayout(jPanelDatosLayout);
        jPanelDatosLayout.setHorizontalGroup(
            jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTFNumeroLote, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFDescripcion, javax.swing.GroupLayout.DEFAULT_SIZE, 715, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelDatosLayout.setVerticalGroup(
            jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosLayout.createSequentialGroup()
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFNumeroLote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jBAnalisis1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBAnalisis1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/actualizar.png"))); // NOI18N
        jBAnalisis1.setText("CONTRATO");
        jBAnalisis1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBAnalisis1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAnalisis1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTablaLayout = new javax.swing.GroupLayout(jPanelTabla);
        jPanelTabla.setLayout(jPanelTablaLayout);
        jPanelTablaLayout.setHorizontalGroup(
            jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTablaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTablaLayout.createSequentialGroup()
                        .addComponent(jBDespacho, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBSeleccionarTambores, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBAnalisis, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBAnalisis1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelTablaLayout.createSequentialGroup()
                        .addComponent(jPanelDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelTablaLayout.setVerticalGroup(
            jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTablaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBDespacho, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBSeleccionarTambores, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBAnalisis, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBAnalisis1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jBVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/volver icono.png"))); // NOI18N
        jBVolver.setText("VOLVER");
        jBVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1005, 1005, 1005)
                        .addComponent(jBVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanelTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 1170, 670));

        jDialogDescargasFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/fondo dialog.png"))); // NOI18N
        getContentPane().add(jDialogDescargasFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 770));

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void actualizarTabla() {
        jTFNumeroLote.setText("");
        jTFDescripcion.setText("");
        //this.jTableLote.removeAll();
        Query queryC = em.createQuery("SELECT l FROM Lote l WHERE l.idLoteContrato =:contratoLote").setParameter("contratoLote", contrato);
        loteQuery = java.beans.Beans.isDesignTime() ? null : queryC;
        loteList.clear();
        loteList.addAll(loteQuery.getResultList());

    }

    private void activarDatos() {
        for (Component component : jPanelDatos.getComponents()) {
            component.setEnabled(true);
        }
    }

    private void desactivarDatos() {
        for (Component component : jPanelDatos.getComponents()) {
            component.setEnabled(false);
        }
    }

    private void activarTabla() {
        for (Component component : jPanelTabla.getComponents()) {
            component.setEnabled(true);
        }
    }

    private void desactivarTabla() {
        for (Component component : jPanelTabla.getComponents()) {
            component.setEnabled(false);
        }
    }
    private void jTableLoteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableLoteMouseClicked


    }//GEN-LAST:event_jTableLoteMouseClicked

    private void jBAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAgregarActionPerformed

        if (this.jTableContrato.getSelectedRowCount() == 1) {

            activarDatos();
            desactivarTabla();
            jTFNumeroLote.setText("");
            jTFDescripcion.setText("");
            control = "agregar";
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un contrato", "Validación", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jBAgregarActionPerformed

    private void jBEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditarActionPerformed

        if (this.jTableLote.getSelectedRowCount() == 1) {
            lote = loteList.get(jTableLote.getSelectedRow());
            if (lote.getDespacho() == null) {
                control = "editar";
                desactivarTabla();
                activarDatos();
            } else {
                JOptionPane.showMessageDialog(null, "El Lote ya se encuentra despachado", "Validación", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un Lote", "Validación", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jBEditarActionPerformed

    private void jBBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBorrarActionPerformed

        if (this.jTableLote.getSelectedRowCount() == 1) {
            Lote lo = loteList.get(jTableLote.getSelectedRow());
            if (lo.getTamborCollection().size() != 0) {

                JOptionPane.showMessageDialog(rootPane, "No se puede eliminar el Lote - Tambores asociados");
                actualizarTabla();

            } else if (JOptionPane.showConfirmDialog(null, "Desea Eliminar el Lote?", "Atencion", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {

                try {
                    controladorL.destroy(lo.getIdLote());
                    JOptionPane.showMessageDialog(null, "Lote eliminado");
                    actualizarTabla();

                } catch (NonexistentEntityException ex) {
                    Logger.getLogger(jDialogDescargas.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, "Error al eliminar el Lote");
                }
            } else {
                actualizarTabla();
            }

        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un Lote", "Validación", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jBBorrarActionPerformed

    private void jBAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAceptarActionPerformed

        Lote nuevoLote = new Lote();

        if (jTFNumeroLote.getText() == "") {
            JOptionPane.showMessageDialog(null, "Completar Numero de Lote");
            jTFNumeroLote.requestFocus();
        } else if (control == "agregar") {
            loteQuery = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT l FROM Lote l WHERE l.lote =  '" + jTFNumeroLote.getText() + "'");

            if (!loteQuery.getResultList().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Numero de Lote ya existe");
                jTFNumeroLote.requestFocus();
            } else {
                if (jTFDescripcion.getText() == "") {
                    jTFDescripcion.setText("*");
                }
                nuevoLote.setLote(jTFNumeroLote.getText());
                nuevoLote.setIdLoteContrato(contrato);
                nuevoLote.setDescripcion(jTFDescripcion.getText());

                controladorL.create(nuevoLote);
                JOptionPane.showMessageDialog(null, "Lote Agregado");

                jTFNumeroLote.setText("");
                jTFDescripcion.setText("");

                actualizarTabla();
                desactivarDatos();
                activarTabla();
            }
        } else if (control == "editar") {
            
            loteQuery = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT l FROM Lote l WHERE l.lote =  '" + jTFNumeroLote.getText() + "' AND l.idLote != "+ lote.getIdLote());
            
            if (!loteQuery.getResultList().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Numero de Lote ya exite");
                jTFNumeroLote.requestFocus();
            } else {
                if (jTFDescripcion.getText() == "") {
                    jTFDescripcion.setText("*");
                }

            lote.setLote(jTFNumeroLote.getText());
            lote.setDescripcion(jTFDescripcion.getText());

            try {
                controladorL.edit(lote);
                JOptionPane.showMessageDialog(null, "Lote actualizado");

            } catch (NonexistentEntityException ex) {
                Logger.getLogger(jDialogDescargas.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(jDialogDescargas.class.getName()).log(Level.SEVERE, null, ex);
            }
            actualizarTabla();
            desactivarDatos();
            activarTabla();
        }
        }
    }//GEN-LAST:event_jBAceptarActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        actualizarTabla();
        desactivarDatos();
        activarTabla();
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jBDespachoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDespachoActionPerformed

        if (this.jTableLote.getSelectedRowCount() == 1) {
            lote = loteList.get(jTableLote.getSelectedRow());
            if (lote.getDespacho() == null) {

                if (lote.getTamborCollection().isEmpty()) {
                    JOptionPane.showMessageDialog(rootPane, "EL Lote no tiene tambores");
                    jTableLote.requestFocus();
                } else {
                    new JDialogDespacho(this, true, lote).setVisible(true);
                    actualizarTabla();
                }
            } else {
                JOptionPane.showMessageDialog(null, "El Lote ya se encuentra despachado", "Validación", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un Lote", "Validación", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jBDespachoActionPerformed

    private void jBSeleccionarTamboresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSeleccionarTamboresActionPerformed

        if (this.jTableLote.getSelectedRowCount() != 1) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un Lote");
            jTableLote.requestFocus();

        } else {
            lote = loteList.get(jTableLote.getSelectedRow());
            if (lote.getDespacho() == null) {
                new jDialogSelecionarTambor(this, true, lote).setVisible(true);
                actualizarTabla();
            } else {
                JOptionPane.showMessageDialog(null, "El Lote ya se encuentra despachado", "Validación", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jBSeleccionarTamboresActionPerformed

    private void jBAnalisisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAnalisisActionPerformed
        if (this.jTableLote.getSelectedRowCount() != 1) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un Lote");
            jTableLote.requestFocus();

        } else {
            lote = loteList.get(jTableLote.getSelectedRow());
            new jDialogAnalisis(this, false, lote).setVisible(true);

        }
    }//GEN-LAST:event_jBAnalisisActionPerformed

    private void jBVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVolverActionPerformed
        this.processWindowEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_jBVolverActionPerformed

    private void jTableContratoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableContratoMouseClicked


    }//GEN-LAST:event_jTableContratoMouseClicked

    private void jTableContratoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableContratoKeyReleased
        // TODO add your handling code here:
        seleccionaContrato();
    }//GEN-LAST:event_jTableContratoKeyReleased

    private void jBAnalisis1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAnalisis1ActionPerformed
        if (this.jTableLote.getSelectedRowCount() != 1) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un Lote");
            jTableLote.requestFocus();

        } else {
            lote = loteList.get(jTableLote.getSelectedRow());
            if (lote.getDespacho() == null) {
                new JDialogCambiaContrato(this, false, lote).setVisible(true);
                seleccionaContrato();
            } else {
                JOptionPane.showMessageDialog(null, "El Lote ya se encuentra despachado", "Validación", JOptionPane.WARNING_MESSAGE);
            }

        }
    }//GEN-LAST:event_jBAnalisis1ActionPerformed

    private void jTableLoteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableLoteMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableLoteMousePressed

    private void jTableContratoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableContratoMouseReleased
        // TODO add your handling code here:
        seleccionaContrato();
    }//GEN-LAST:event_jTableContratoMouseReleased

    private void jTableLoteMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableLoteMouseReleased
        // TODO add your handling code here:
        seleccionaLote();
    }//GEN-LAST:event_jTableLoteMouseReleased

    private void jTableLoteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableLoteKeyReleased
        // TODO add your handling code here:
        seleccionaLote();
    }//GEN-LAST:event_jTableLoteKeyReleased

    private void jBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarActionPerformed

        Cliente cliSel = clienteList.get(jCBCliente.getSelectedIndex());

        Query ql;
        String queryTxt = "SELECT l FROM Lotecontrato l WHERE l.estado='abierto' ";

        if (!cliSel.getRazonSocial().equals("Todos")) {
            queryTxt = queryTxt + " AND l.idContrato.idCliente = :pCliente ";
        }
        if (jCBMercado.getSelectedItem() != "Todos") {
            queryTxt = queryTxt + " AND l.idContrato.mercado = :pMercado ";
        }
        ql = em.createQuery(queryTxt);

        if (jCBMercado.getSelectedItem() != "Todos") {
            ql.setParameter("pMercado", jCBMercado.getSelectedItem());
        }
        if (!cliSel.getRazonSocial().equals("Todos")) {
            ql.setParameter("pCliente", cliSel);
        }

        lotecontratoQuery = java.beans.Beans.isDesignTime() ? null : ql;
        lotecontratoList.clear();
        lotecontratoList.addAll(lotecontratoQuery.getResultList());
    }//GEN-LAST:event_jBBuscarActionPerformed

    private void seleccionaContrato() {
        contrato = lotecontratoList.get(jTableContrato.getSelectedRow());
        actualizarTabla();
    }

    private void seleccionaLote() {
        lote = null;
        lote = loteList.get(jTableLote.getSelectedRow());
        jTFNumeroLote.setText(lote.getLote());
        jTFDescripcion.setText(lote.getDescripcion());
    }

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(jDialogLotes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(jDialogLotes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(jDialogLotes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(jDialogLotes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                jDialogLotes dialog = new jDialogLotes(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager SegTAPUEntityManager;
    private java.util.List<segta.clases.Cliente> clienteList;
    private javax.persistence.Query clienteQuery;
    private java.util.List<segta.clases.Contrato> contratoList;
    private javax.persistence.Query contratoQuery;
    private javax.swing.JButton jBAceptar;
    private javax.swing.JButton jBAgregar;
    private javax.swing.JButton jBAnalisis;
    private javax.swing.JButton jBAnalisis1;
    private javax.swing.JButton jBBorrar;
    private javax.swing.JButton jBBuscar;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBDespacho;
    private javax.swing.JButton jBEditar;
    private javax.swing.JButton jBSeleccionarTambores;
    private javax.swing.JButton jBVolver;
    private javax.swing.JComboBox<String> jCBCliente;
    private javax.swing.JComboBox<String> jCBMercado;
    private javax.swing.JLabel jDialogDescargasFondo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelDatos;
    private javax.swing.JPanel jPanelTabla;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTFDescripcion;
    private javax.swing.JTextField jTFNumeroLote;
    private javax.swing.JTable jTableContrato;
    private javax.swing.JTable jTableLote;
    private java.util.List<segta.clases.Lote> loteList;
    private javax.persistence.Query loteQuery;
    private java.util.List<segta.clases.Lotecontrato> lotecontratoList;
    private javax.persistence.Query lotecontratoQuery;
    private javax.swing.ButtonGroup mercado;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
