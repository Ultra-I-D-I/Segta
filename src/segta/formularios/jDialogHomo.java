/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package segta.formularios;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import segta.clases.ExportarHomo;
import segta.clases.Homo;
import segta.clases.Lote;
import segta.clases.Tambor;
import segta.controladores.HomoJpaController;
import segta.controladores.LoteJpaController;
import segta.controladores.TamborJpaController;
import segta.controladores.TamboreshomoJpaController;
import static segta.formularios.inicio.ho;

/**
 *
 * @author MODERNIZACION3
 */
public class jDialogHomo extends javax.swing.JDialog {

    /**
     * Creates new form jDialogDescargas
     */
    /**
     * Centra Componente en la pantalla
     */
    public static void centerComponent(Component c) {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = c.getSize();

        if (frameSize.height > screenSize.height) {
            frameSize.height = screenSize.height;
        }

        if (frameSize.width > screenSize.width) {
            frameSize.width = screenSize.width;
        }
        c.setLocation((screenSize.width - frameSize.width) / 2,
                (screenSize.height - frameSize.height) / 2);
    }

    EntityManagerFactory emf = Persistence.createEntityManagerFactory("SegTAPU");
    EntityManager em = emf.createEntityManager();
    TamborJpaController controladorTambor = new TamborJpaController(emf);
    TamboreshomoJpaController controladorT = new TamboreshomoJpaController(emf);
    HomoJpaController controladorH = new HomoJpaController(emf);    
    LoteJpaController controladorLote = new LoteJpaController(emf);
        
       

    String fechaO;
    String control;
    Lote loteSel;
    ExportarHomo archivoExcel;

    public jDialogHomo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        desactivarDatos();
        DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
        tcr.setHorizontalAlignment(SwingConstants.CENTER);
        jTableHomo.getColumnModel().getColumn(0).setCellRenderer(tcr);
        jTableHomo.getColumnModel().getColumn(2).setCellRenderer(tcr);
        jTableHomo.getColumnModel().getColumn(3).setCellRenderer(tcr);
        fechaO = dCCfecha.getText();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this coho. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        SegTAPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("SegTAPU").createEntityManager();
        loteQuery = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT l FROM Lote l");
        loteList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : loteQuery.getResultList();
        homoQuery = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT h FROM Homo h ORDER BY h.idHomo DESC");
        homoList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() :   org.jdesktop.observablecollections.ObservableCollections.observableList(homoQuery.getResultList());
        tamborExcelQuery = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT h FROM Homo h");
        tamboresExcelList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() :   org.jdesktop.observablecollections.ObservableCollections.observableList(tamborExcelQuery.getResultList());
        tamborLoteQuery = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT t FROM Tambor t");
        tamboresLoteList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() :   org.jdesktop.observablecollections.ObservableCollections.observableList(tamborExcelQuery.getResultList());
        tamborSobrantesQuery = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT t FROM Tamboreshomo t");
        tamboresSobrantesList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() :   org.jdesktop.observablecollections.ObservableCollections.observableList(tamborExcelQuery.getResultList());
        jPanel3 = new javax.swing.JPanel();
        jBVolver = new javax.swing.JButton();
        jPanelTabla = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableHomo = new javax.swing.JTable();
        jBAgregar = new javax.swing.JButton();
        jBEditar = new javax.swing.JButton();
        jBBorrar = new javax.swing.JButton();
        jBCargarTambores = new javax.swing.JButton();
        dCCfechaDesde = new datechooser.beans.DateChooserCombo();
        dCCfechaHasta = new datechooser.beans.DateChooserCombo();
        jTFBuscarCamion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jBBuscarDescarga = new javax.swing.JButton();
        jBExportar8 = new javax.swing.JButton();
        jBSobrantes = new javax.swing.JButton();
        jPanelDatos = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jBAceptar = new javax.swing.JButton();
        jBCancelar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        dCCfecha = new datechooser.beans.DateChooserCombo();
        jTFTambores = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabelDescargasFondo = new javax.swing.JLabel();
        dCCExportar = new datechooser.beans.DateChooserCombo();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("HOMOGENEIZADO");
        setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jBVolver.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/volver icono.png"))); // NOI18N
        jBVolver.setText("VOLVER");
        jBVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVolverActionPerformed(evt);
            }
        });

        jPanelTabla.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "LOTES HOMOGENEIZADOS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        jTableHomo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, homoList, jTableHomo);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idHomo}"));
        columnBinding.setColumnName("Id Homo");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fecha}"));
        columnBinding.setColumnName("Fecha");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idLote}"));
        columnBinding.setColumnName("Id Lote");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tambores}"));
        columnBinding.setColumnName("Tambores");
        columnBinding.setColumnClass(Integer.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jTableHomo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableHomoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableHomo);
        if (jTableHomo.getColumnModel().getColumnCount() > 0) {
            jTableHomo.getColumnModel().getColumn(0).setResizable(false);
            jTableHomo.getColumnModel().getColumn(1).setResizable(false);
        }

        jBAgregar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/add icono.png"))); // NOI18N
        jBAgregar.setText("AGREGAR");
        jBAgregar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAgregarActionPerformed(evt);
            }
        });

        jBEditar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/editar.png"))); // NOI18N
        jBEditar.setText("EDITAR");
        jBEditar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditarActionPerformed(evt);
            }
        });

        jBBorrar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/borrar.png"))); // NOI18N
        jBBorrar.setText("BORRAR");
        jBBorrar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBorrarActionPerformed(evt);
            }
        });

        jBCargarTambores.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBCargarTambores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/tambor.png"))); // NOI18N
        jBCargarTambores.setText("TAMBORES");
        jBCargarTambores.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBCargarTambores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCargarTamboresActionPerformed(evt);
            }
        });

        dCCfechaDesde.setNothingAllowed(false);
        dCCfechaDesde.setWeekStyle(datechooser.view.WeekDaysStyle.SHORT);
        try {
            dCCfechaDesde.setDefaultPeriods(new datechooser.model.multiple.PeriodSet(new datechooser.model.multiple.Period(new java.util.GregorianCalendar(2020, 0, 1),
                new java.util.GregorianCalendar(2020, 0, 1))));
    } catch (datechooser.model.exeptions.IncompatibleDataExeption e1) {
        e1.printStackTrace();
    }
    dCCfechaDesde.setFieldFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 20));
    dCCfechaDesde.setBehavior(datechooser.model.multiple.MultyModelBehavior.SELECT_SINGLE);

    dCCfechaHasta.setNothingAllowed(false);
    dCCfechaHasta.setWeekStyle(datechooser.view.WeekDaysStyle.SHORT);
    dCCfechaHasta.setFieldFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 20));
    dCCfechaHasta.setBehavior(datechooser.model.multiple.MultyModelBehavior.SELECT_SINGLE);

    jTFBuscarCamion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

    jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    jLabel3.setText("Desde");

    jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    jLabel4.setText("Hasta");

    jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    jLabel6.setText("Lote");

    jBBuscarDescarga.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    jBBuscarDescarga.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/buscar icono.png"))); // NOI18N
    jBBuscarDescarga.setText("Buscar");
    jBBuscarDescarga.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBBuscarDescargaActionPerformed(evt);
        }
    });

    jBExportar8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/excel.png"))); // NOI18N
    jBExportar8.setText("Exportar");
    jBExportar8.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBExportar8ActionPerformed(evt);
        }
    });

    jBSobrantes.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    jBSobrantes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/report2.png"))); // NOI18N
    jBSobrantes.setText("SOBRANTES");
    jBSobrantes.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jBSobrantes.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBSobrantesActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanelTablaLayout = new javax.swing.GroupLayout(jPanelTabla);
    jPanelTabla.setLayout(jPanelTablaLayout);
    jPanelTablaLayout.setHorizontalGroup(
        jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelTablaLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1)
                .addGroup(jPanelTablaLayout.createSequentialGroup()
                    .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(dCCfechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addGap(18, 18, 18)
                    .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(dCCfechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addGap(50, 50, 50)
                    .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelTablaLayout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(jPanelTablaLayout.createSequentialGroup()
                            .addComponent(jTFBuscarCamion, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jBBuscarDescarga, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTablaLayout.createSequentialGroup()
                    .addComponent(jBCargarTambores, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTablaLayout.createSequentialGroup()
                            .addComponent(jBAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jBEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jBBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTablaLayout.createSequentialGroup()
                            .addComponent(jBSobrantes, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                            .addGap(234, 234, 234)
                            .addComponent(jBExportar8, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(6, 6, 6)))
            .addContainerGap())
    );
    jPanelTablaLayout.setVerticalGroup(
        jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelTablaLayout.createSequentialGroup()
            .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelTablaLayout.createSequentialGroup()
                    .addGap(12, 12, 12)
                    .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4)))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTablaLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel6)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(dCCfechaDesde, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(dCCfechaHasta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jTFBuscarCamion, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jBBuscarDescarga, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGap(28, 28, 28)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jBAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jBEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jBBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
            .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBCargarTambores, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBSobrantes, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jBExportar8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
    );

    jPanelDatos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DATOS DEL HOMOGENEIZADO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

    jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    jLabel1.setText("LOTE");

    jBAceptar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    jBAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/aceptar.png"))); // NOI18N
    jBAceptar.setText("ACEPTAR");
    jBAceptar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jBAceptar.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBAceptarActionPerformed(evt);
        }
    });

    jBCancelar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    jBCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/cancerlar.png"))); // NOI18N
    jBCancelar.setText("CANCELAR");
    jBCancelar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jBCancelar.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBCancelarActionPerformed(evt);
        }
    });

    jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    jLabel5.setText("FECHA");

    dCCfecha.setWeekStyle(datechooser.view.WeekDaysStyle.SHORT);
    dCCfecha.setFieldFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 18));

    jTFTambores.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

    jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    jLabel2.setText("TAMBORES");

    jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

    org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, loteList, jComboBox1);
    bindingGroup.addBinding(jComboBoxBinding);

    jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    jLabel7.setText("A ENVASAR");

    javax.swing.GroupLayout jPanelDatosLayout = new javax.swing.GroupLayout(jPanelDatos);
    jPanelDatos.setLayout(jPanelDatosLayout);
    jPanelDatosLayout.setHorizontalGroup(
        jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosLayout.createSequentialGroup()
            .addGap(64, 64, 64)
            .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jLabel5)
                .addComponent(jLabel1))
            .addGap(35, 35, 35)
            .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(dCCfecha, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
            .addGap(91, 91, 91))
        .addGroup(jPanelDatosLayout.createSequentialGroup()
            .addGap(21, 21, 21)
            .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelDatosLayout.createSequentialGroup()
                    .addComponent(jBAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(30, 30, 30))
                .addGroup(jPanelDatosLayout.createSequentialGroup()
                    .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelDatosLayout.createSequentialGroup()
                            .addGap(2, 2, 2)
                            .addComponent(jLabel2))
                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addGap(35, 35, 35)
                    .addComponent(jTFTambores, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(91, Short.MAX_VALUE))))
    );
    jPanelDatosLayout.setVerticalGroup(
        jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanelDatosLayout.createSequentialGroup()
            .addGap(64, 64, 64)
            .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                .addComponent(dCCfecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(78, 78, 78)
            .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jTFTambores, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanelDatosLayout.createSequentialGroup()
                    .addComponent(jLabel2)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel7)))
            .addGap(75, 75, 75)
            .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jBAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jBCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(24, 24, 24))
    );

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addContainerGap(24, Short.MAX_VALUE)
            .addComponent(jPanelDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jPanelTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jBVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(24, Short.MAX_VALUE))
    );
    jPanel3Layout.setVerticalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jPanelDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addComponent(jPanelTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jBVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(16, Short.MAX_VALUE))
    );

    getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, 1190, 600));

    jLabelDescargasFondo.setDisplayedMnemonic('D');
    jLabelDescargasFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/fondo dialog.png"))); // NOI18N
    getContentPane().add(jLabelDescargasFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 710));
    getContentPane().add(dCCExportar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

    bindingGroup.bind();

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAgregarActionPerformed

        activarDatos();
        desactivarTabla();

        control = "agregar";


    }//GEN-LAST:event_jBAgregarActionPerformed
    private void jBEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditarActionPerformed

        if (this.jTableHomo.getSelectedRowCount() == 1) {

            ho = homoList.get(jTableHomo.getSelectedRow());
            try {
                Calendar cal = Calendar.getInstance();
                cal.setTime(ho.getFecha());
                this.dCCfecha.setSelectedDate(cal);
            } catch (Exception ex) {
                Logger.getLogger(jDialogAnalisis.class.getName()).log(Level.SEVERE, null, ex);
            }
            activarDatos();
            desactivarTabla();
            control = "editar";
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una Homogeneización", "Validación", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jBEditarActionPerformed
    private void actualizarTabla() {

        homoList.clear();
        homoQuery = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT h FROM Homo h ORDER BY h.idHomo DESC");
        homoList.addAll(homoQuery.getResultList());

    }

    private void activarDatos() {
        for (Component component : jPanelDatos.getComponents()) {
            component.setEnabled(true);
        }
    }

    private void desactivarDatos() {
        for (Component component : jPanelDatos.getComponents()) {
            component.setEnabled(false);
        }
    }

    private void activarTabla() {
        for (Component component : jPanelTabla.getComponents()) {
            component.setEnabled(true);
        }
        this.jTableHomo.setEnabled(true);
    }

    private void desactivarTabla() {
        for (Component component : jPanelTabla.getComponents()) {
            component.setEnabled(false);
        }
        this.jTableHomo.setEnabled(false);
    }
    private void jBCargarTamboresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCargarTamboresActionPerformed

        
        loteSel = (Lote) this.jComboBox1.getSelectedItem();
        if (this.jTableHomo.getSelectedRowCount() == 1) {
            ho = homoList.get(jTableHomo.getSelectedRow());
            for (Tambor tambor : loteSel.getTamborCollection()) {
                tambor.setEstado("homogeneizado");
                try {
                    controladorTambor.edit(tambor);
                } catch (Exception ex) {
                    Logger.getLogger(jDialogHomo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            new jDialogHomogeneizado(this, true).setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una Homogeneización", "Validación", JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_jBCargarTamboresActionPerformed

    private void jBAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAceptarActionPerformed

        Homo nuevoHomo = new Homo();

        String fechaS = dCCfecha.getText();        
        loteSel = (Lote) this.jComboBox1.getSelectedItem();

        try {
            Date fechaD = (Date) new SimpleDateFormat("dd/MM/yy").parse(fechaS);
            nuevoHomo.setFecha(fechaD);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, "Error al registrar la fecha", "Información", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(jDialogHomo.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (control == "agregar") {
            nuevoHomo.setIdLote(loteSel.getLote());
            nuevoHomo.setTambores(Integer.parseInt(jTFTambores.getText()));

            try {
                controladorH.create(nuevoHomo);
                JOptionPane.showMessageDialog(null, "Homogeneización Agregada");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Error al agregr la Homogeneización", "Información", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(jDialogHomo.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else if (control == "editar") {

            ho.setIdLote(loteSel.getLote());
            ho.setTambores(Integer.parseInt(jTFTambores.getText()));

            try {
                Date fechaD = (Date) new SimpleDateFormat("dd/MM/yy").parse(fechaS);
                ho.setFecha(fechaD);
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(null, "Error al registrar la fecha", "Información", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(jDialogHomo.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                controladorH.edit(ho);
                JOptionPane.showMessageDialog(null, "Homogeneización actualizada");
                actualizarTabla();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Error al editar la Homogeneización", "Información", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(jDialogHomo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        desactivarDatos();
        activarTabla();
        actualizarTabla();

    }//GEN-LAST:event_jBAceptarActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        desactivarDatos();
        activarTabla();
        actualizarTabla();
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jBBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBorrarActionPerformed
        if (this.jTableHomo.getSelectedRowCount() == 1) {
            Homo homo = homoList.get(jTableHomo.getSelectedRow());
            if (homo.getTamboreshomoCollection().isEmpty()) {
                if (JOptionPane.showConfirmDialog(null, "Desea borrar la Homogeneización?", "Atención", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    try {
                        controladorH.destroy(homo.getIdHomo());
                        JOptionPane.showMessageDialog(null, "Homogeneización borrada");
                        actualizarTabla();
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, "Error al borrar la Homogeneización", "Información", JOptionPane.ERROR_MESSAGE);
                        Logger.getLogger(jDialogHomo.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

            } else {
                JOptionPane.showMessageDialog(null, "No se puede borrar la Homogeneización, tiene tambores asociados", "Validación", JOptionPane.WARNING_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una Homogeneización", "Validación", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jBBorrarActionPerformed

    private void jBVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVolverActionPerformed
        this.processWindowEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));        // TODO add your handling code here:
    }//GEN-LAST:event_jBVolverActionPerformed

    private void jBBuscarDescargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarDescargaActionPerformed

        String fechaDesde = dCCfechaDesde.getText();
        String fechaHasta = dCCfechaHasta.getText();
        String paramLote = '%' + this.jTFBuscarCamion.getText() + '%';
        Date fechaD = null;
        Date fechaH = null;
        try {
            fechaD = (Date) new SimpleDateFormat("dd/MM/yy").parse(fechaDesde);
        } catch (ParseException ex) {
            Logger.getLogger(jDialogHomo.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            fechaH = (Date) new SimpleDateFormat("dd/MM/yy").parse(fechaHasta);
        } catch (ParseException ex) {
            Logger.getLogger(jDialogHomo.class.getName()).log(Level.SEVERE, null, ex);
        }

        Query queryDesc = SegTAPUEntityManager.createQuery("SELECT h FROM Homo h WHERE h.idLote like :lote AND  h.fecha BETWEEN :fechaDesde AND :fechaHasta ORDER BY h.fecha DESC");
        queryDesc.setParameter("fechaDesde", fechaD);
        queryDesc.setParameter("fechaHasta", fechaH);
        queryDesc.setParameter("lote", paramLote);

        homoQuery = java.beans.Beans.isDesignTime() ? null : queryDesc;
        homoList.clear();
        homoList.addAll(homoQuery.getResultList());
    }//GEN-LAST:event_jBBuscarDescargaActionPerformed

    private void jTableHomoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableHomoMouseClicked

        ho = homoList.get(jTableHomo.getSelectedRow());
        if (ho.getTamboreshomoCollection().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Homogeneización sin finalizar o en proceso", "Validación", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jTableHomoMouseClicked

    private void jBExportar8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExportar8ActionPerformed
                   
            //BUSCO LOS TAMBORES DENTRO DE LA HOMOGENEIZACION EN ESA FECHA
            Query qlt;
            Query qlLote;
            Query qltamboresLote;
            Query qltamboresSobrantes;
            tamboresExcelList.clear();
            tamboresLoteList.clear();
            tamboresSobrantesList.clear();
            loteList.clear();
            for (int i = 0; i < homoList.size(); i++) {
                Homo h = (Homo) homoList.get(i);  
                
                qlt = em.createQuery("SELECT t FROM Tamboreshomo t WHERE t.idHomo.idLote = :idHomo");
                qlt.setParameter("idHomo", h.getIdLote());
                tamborExcelQuery = java.beans.Beans.isDesignTime() ? null : qlt;
                tamboresExcelList.addAll(tamborExcelQuery.getResultList());
                
                qltamboresLote = em.createQuery("SELECT t FROM Tambor t WHERE t.idLote.lote = :idHomo");                
                qltamboresLote.setParameter("idHomo", h.getIdLote());                
                tamborLoteQuery = java.beans.Beans.isDesignTime() ? null : qltamboresLote;
                tamboresLoteList.addAll(tamborLoteQuery.getResultList());
                
                qltamboresSobrantes = em.createQuery("SELECT t FROM Tamboreshomo t WHERE t.idHomoNuevo.idLote = :idHomo");
                qltamboresSobrantes.setParameter("idHomo", h.getIdLote());
                tamborSobrantesQuery = java.beans.Beans.isDesignTime() ? null : qltamboresSobrantes;
                tamboresSobrantesList.addAll(tamborSobrantesQuery.getResultList());
                
                qlLote = em.createQuery("SELECT l FROM Lote l WHERE l.lote = :idHomo");
                qlLote.setParameter("idHomo", h.getIdLote());
                loteQuery = java.beans.Beans.isDesignTime() ? null : qlLote;
                loteList.addAll(loteQuery.getResultList());
                
            }
           
           
          
                   
            try {
                archivoExcel = new ExportarHomo();
                archivoExcel.ExportarExcel(loteList, homoList, tamboresLoteList, tamboresSobrantesList, tamboresExcelList);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "No se pudo exportar", "Intentelo de nuevo" + ex.getMessage(), JOptionPane.ERROR_MESSAGE);
                System.out.println("Error excel " + ex.getMessage());
            }

        

    }//GEN-LAST:event_jBExportar8ActionPerformed

    private void jBSobrantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSobrantesActionPerformed
        
         if (this.jTableHomo.getSelectedRowCount() != 0){

            ho = homoList.get(jTableHomo.getSelectedRow());
            
            new JDialogTamboresSobrantes(this, true, ho).setVisible(true);
            
         }else{
             JOptionPane.showMessageDialog(null, "Seleccione un Homogeneizado", "Validación", JOptionPane.WARNING_MESSAGE);
             jTableHomo.requestFocus();
         }
    }//GEN-LAST:event_jBSobrantesActionPerformed
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogPool.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogPool.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogPool.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogPool.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jDialogHomo dialog = new jDialogHomo(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager SegTAPUEntityManager;
    private datechooser.beans.DateChooserCombo dCCExportar;
    private datechooser.beans.DateChooserCombo dCCfecha;
    private datechooser.beans.DateChooserCombo dCCfechaDesde;
    private datechooser.beans.DateChooserCombo dCCfechaHasta;
    private java.util.List<segta.clases.Homo> homoList;
    private javax.persistence.Query homoQuery;
    private javax.swing.JButton jBAceptar;
    private javax.swing.JButton jBAgregar;
    private javax.swing.JButton jBBorrar;
    private javax.swing.JButton jBBuscarDescarga;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBCargarTambores;
    private javax.swing.JButton jBEditar;
    private javax.swing.JButton jBExportar8;
    private javax.swing.JButton jBSobrantes;
    private javax.swing.JButton jBVolver;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelDescargasFondo;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelDatos;
    private javax.swing.JPanel jPanelTabla;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFBuscarCamion;
    private javax.swing.JTextField jTFTambores;
    private javax.swing.JTable jTableHomo;
    private java.util.List<segta.clases.Lote> loteList;
    private javax.persistence.Query loteQuery;
    private javax.persistence.Query tamborExcelQuery;
    private javax.persistence.Query tamborLoteQuery;
    private javax.persistence.Query tamborSobrantesQuery;
    private java.util.List tamboresExcelList;
    private java.util.List tamboresLoteList;
    private java.util.List tamboresSobrantesList;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
