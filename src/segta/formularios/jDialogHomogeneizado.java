/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package segta.formularios;

import com.fazecast.jSerialComm.SerialPort;
import com.fazecast.jSerialComm.SerialPortDataListener;
import com.fazecast.jSerialComm.SerialPortEvent;
import com.sun.glass.events.KeyEvent;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.Printable;
import static java.awt.print.Printable.NO_SUCH_PAGE;
import static java.awt.print.Printable.PAGE_EXISTS;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.IOException;
import java.io.InputStream;
import static java.lang.Float.parseFloat;
import java.nio.charset.StandardCharsets;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableCellRenderer;
import net.sourceforge.barbecue.Barcode;
import net.sourceforge.barbecue.BarcodeFactory;
import net.sourceforge.barbecue.BarcodeImageHandler;
import segta.clases.Tambor;
import segta.clases.Tamboreshomo;
import segta.controladores.HomoJpaController;
import segta.controladores.TamboreshomoJpaController;
import static segta.formularios.inicio.ho;

/**
 *
 * @author MODERNIZACION3
 */
public class jDialogHomogeneizado extends javax.swing.JDialog {

    /**
     * Creates new form jDialogTambores
     */
    /**
     * Centra Componente en la pantalla
     */
    public static void centerComponent(Component c) {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = c.getSize();

        if (frameSize.height > screenSize.height) {
            frameSize.height = screenSize.height;
        }

        if (frameSize.width > screenSize.width) {
            frameSize.width = screenSize.width;
        }
        c.setLocation((screenSize.width - frameSize.width) / 2,
                (screenSize.height - frameSize.height) / 2);
    }
//    System.setProperty( "java.library.path", "C:\\Users\\MODERNIZACION\\Documents\\NetBeansProjects\\Segta" );
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("SegTAPU");
    EntityManager em = emf.createEntityManager();
    TamboreshomoJpaController controladorT = new TamboreshomoJpaController(emf);
    HomoJpaController controladorH = new HomoJpaController(emf);

    String estadoTambor = null;
    Long ultimo;
    Tambor tamborSel;
    String imprimeNeto = null;
    String imprimeNro = null;
    int nro = 1;
    String lectura;
    String sobrante;

    public jDialogHomogeneizado(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        jTFSenasa.requestFocus();
        if (ho.getTamboreshomoCollection().size() >= 1) {
            nro = ho.getTamboreshomoCollection().size() + 1;
        }
        jCheckBoxSobrante.setSelected(false);

//        CENTRA LOS DATOS EN LAS COLUMNAS DE LAS TABLAS
        DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
        tcr.setHorizontalAlignment(SwingConstants.CENTER);
        jTable1.getColumnModel().getColumn(0).setCellRenderer(tcr);
        jTable1.getColumnModel().getColumn(1).setCellRenderer(tcr);
        jTable1.getColumnModel().getColumn(2).setCellRenderer(tcr);
        jTable1.getColumnModel().getColumn(3).setCellRenderer(tcr);
        jTable1.getColumnModel().getColumn(4).setCellRenderer(tcr);
//        COMPLETA EL PANEL CON LOS DATOS DE LA DESCARGA
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String fechaHomo = sdf.format(ho.getFecha());
        jTFFechaHomo.setText(fechaHomo);
        jTFLote.setText(ho.getIdLote());
        jTFNumero.setText(String.valueOf(nro));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        SegTAPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("SegTAPU").createEntityManager();
        tamboreshomoQuery = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT t FROM Tamboreshomo t WHERE t.idHomo =:homoSel ORDER BY t.idHomo DESC").setParameter("homoSel", ho);
        tamboreshomoList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() :   org.jdesktop.observablecollections.ObservableCollections.observableList(tamboreshomoQuery.getResultList());
        jPanel3 = new javax.swing.JPanel();
        jPanelTambores = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jBBorrar = new javax.swing.JButton();
        jBEditar = new javax.swing.JButton();
        jBAgregar = new javax.swing.JButton();
        jButtonImprimir = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTFNumero = new javax.swing.JTextField();
        jTFSenasa = new javax.swing.JTextField();
        jTFTara = new javax.swing.JTextField();
        jLNeto = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTFBruto = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jCheckBoxSobrante = new javax.swing.JCheckBox();
        jBBalanza1 = new javax.swing.JButton();
        jBBalanza2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jTFFechaHomo = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTFLote = new javax.swing.JTextField();
        jBVolver = new javax.swing.JButton();
        jTextFieldPesoTotal = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTextFieldCantidad = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CARGAR TAMBORES");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setPreferredSize(new java.awt.Dimension(1330, 650));

        jPanelTambores.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "TAMBORES HOMOGENEIZADOS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTable1.setOpaque(false);
        jTable1.setRequestFocusEnabled(false);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tamboreshomoList, jTable1);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${numero}"));
        columnBinding.setColumnName("Numero");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${senasa}"));
        columnBinding.setColumnName("Senasa");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tara}"));
        columnBinding.setColumnName("Tara");
        columnBinding.setColumnClass(Float.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${bruto}"));
        columnBinding.setColumnName("Bruto");
        columnBinding.setColumnClass(Float.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${neto}"));
        columnBinding.setColumnName("Neto");
        columnBinding.setColumnClass(Float.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${sobrante}"));
        columnBinding.setColumnName("Sobrante");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idHomoNuevo.idLote}"));
        columnBinding.setColumnName("Lote Anterior");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                /*
                ListSelectionModel sm = (ListSelectionModel) e.getSource();
                int sum = 0;
                for (int i = sm.getMinSelectionIndex(); i <= sm.getMaxSelectionIndex(); i++) {
                    sum += sm.isSelectedIndex(i) ? 1 : 0;
                }
                contadorT=Integer.toString(sum);
                */
                calculaSeleccion();
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(60);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(60);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(60);
            jTable1.getColumnModel().getColumn(1).setMinWidth(60);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(60);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(60);
            jTable1.getColumnModel().getColumn(2).setMinWidth(60);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(60);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(60);
        }

        jBBorrar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/borrar.png"))); // NOI18N
        jBBorrar.setText("BORRAR");
        jBBorrar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBorrarActionPerformed(evt);
            }
        });

        jBEditar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/editar.png"))); // NOI18N
        jBEditar.setText("EDITAR");
        jBEditar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditarActionPerformed(evt);
            }
        });

        jBAgregar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/aceptar.png"))); // NOI18N
        jBAgregar.setText("AGREGAR");
        jBAgregar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAgregarActionPerformed(evt);
            }
        });
        jBAgregar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jBAgregarKeyPressed(evt);
            }
        });

        jButtonImprimir.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/imprimir icono.png"))); // NOI18N
        jButtonImprimir.setText("ETIQUETA");
        jButtonImprimir.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImprimirActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DATOS DEL TAMBOR", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        jTFNumero.setEditable(false);
        jTFNumero.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jTFSenasa.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTFSenasa.setNextFocusableComponent(jTFTara);
        jTFSenasa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFSenasaKeyPressed(evt);
            }
        });

        jTFTara.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTFTara.setNextFocusableComponent(jTFBruto);
        jTFTara.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFTaraKeyPressed(evt);
            }
        });

        jLNeto.setEditable(false);
        jLNeto.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("NÚMERO");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("SENASA");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("BRUTO");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("TARA");

        jTFBruto.setEditable(false);
        jTFBruto.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTFBruto.setNextFocusableComponent(jLNeto);
        jTFBruto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFBrutoFocusLost(evt);
            }
        });
        jTFBruto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFBrutoKeyPressed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("NETO");

        jCheckBoxSobrante.setText("SOBRANTE");

        jBBalanza1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBBalanza1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/balanza 1.png"))); // NOI18N
        jBBalanza1.setText("BALANZA 1");
        jBBalanza1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBBalanza1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBalanza1ActionPerformed(evt);
            }
        });

        jBBalanza2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBBalanza2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/balanza2.png"))); // NOI18N
        jBBalanza2.setText("BALANZA 2");
        jBBalanza2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBBalanza2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBalanza2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(111, 111, 111)
                            .addComponent(jLabel6))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLNeto, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTFSenasa, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                            .addComponent(jTFNumero))
                        .addGap(36, 36, 36)
                        .addComponent(jCheckBoxSobrante, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTFTara, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFBruto, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(85, 85, 85)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBBalanza2, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                            .addComponent(jBBalanza1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(0, 49, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFSenasa, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxSobrante, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFTara, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTFBruto, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLNeto, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jBBalanza1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBBalanza2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42))
        );

        javax.swing.GroupLayout jPanelTamboresLayout = new javax.swing.GroupLayout(jPanelTambores);
        jPanelTambores.setLayout(jPanelTamboresLayout);
        jPanelTamboresLayout.setHorizontalGroup(
            jPanelTamboresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTamboresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTamboresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelTamboresLayout.createSequentialGroup()
                        .addComponent(jBAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jButtonImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelTamboresLayout.setVerticalGroup(
            jPanelTamboresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTamboresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTamboresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTamboresLayout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(102, 102, 102))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTamboresLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelTamboresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(99, 99, 99))))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "LOTE HOMOGENEIZADO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("FECHA ");

        jTFFechaHomo.setEditable(false);
        jTFFechaHomo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setText("LOTE");

        jTFLote.setEditable(false);
        jTFLote.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTFLote, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFFechaHomo, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTFLote)
                        .addComponent(jLabel16))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(jTFFechaHomo)))
                .addContainerGap())
        );

        jBVolver.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/volver icono.png"))); // NOI18N
        jBVolver.setText("VOLVER");
        jBVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVolverActionPerformed(evt);
            }
        });

        jTextFieldPesoTotal.setEditable(false);
        jTextFieldPesoTotal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("CANTIDAD");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("NETO");

        jTextFieldCantidad.setEditable(false);
        jTextFieldCantidad.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldPesoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jBVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(165, 165, 165))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanelTambores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(166, 166, 166))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelTambores, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextFieldCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldPesoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jBVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(2692, 2692, 2692))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 1310, 700));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/fondo dialog.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 770));

        bindingGroup.bind();

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void actualizarTabla() {

        tamboreshomoList.clear();
        tamboreshomoQuery = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT t FROM Tamboreshomo t WHERE t.idHomo =:homoSel").setParameter("homoSel", ho);
        tamboreshomoList.addAll(tamboreshomoQuery.getResultList());

        nro = tamboreshomoList.size() + 1;
        jTFSenasa.setText("");
        jTFNumero.setText(String.valueOf(nro));
        jTFBruto.setText("");
        jTFTara.setText("");
        jLNeto.setText("");
        this.jBBalanza1.setEnabled(true);

    }

    public void leerBalanza() throws IOException {
        int numRead = 0;
        SerialPort[] balanzaList = SerialPort.getCommPorts();

        // SETTEO LA BALANAZA 1 Y ABRO PUERTO
        SerialPort balanza = balanzaList[balanzaList.length - 1];
        System.out.print(balanza);
        balanza.setBaudRate(9600);
        balanza.setNumDataBits(8);
        balanza.setNumStopBits(1);
        balanza.setParity(0);
        balanza.openPort();

        balanza.setComPortTimeouts(SerialPort.TIMEOUT_READ_BLOCKING, 0, 0);

        byte[] balanza1Datos = new byte[12];

        numRead = balanza.readBytes(balanza1Datos, balanza1Datos.length);
        lectura = new String(balanza1Datos, StandardCharsets.UTF_8);
        String pesoEstable1 = lectura.substring(9, 12);

        // SETTEO LA BALANAZA 2 Y ABRO PUERTO
//        SerialPort balanza2 = balanzaList[balanzaList.length];
//        System.out.print(balanza2);
//        balanza2.setBaudRate(9600);
//        balanza2.setNumDataBits(8);
//        balanza2.setNumStopBits(1);
//        balanza2.setParity(0);
//        balanza2.openPort();
//
//        balanza2.setComPortTimeouts(SerialPort.TIMEOUT_READ_BLOCKING, 0, 0);
//
//        byte[] balanza2Datos = new byte[12];
//
//        numRead = balanza2.readBytes(balanza2Datos, balanza2Datos.length);
//        lectura = new String(balanza2Datos, StandardCharsets.UTF_8);
//        String pesoEstable2 = lectura.substring(9, 12);
        for (int i = 0; i < balanzaList.length; ++i) {
            System.out.println("   [" + (i + 1) + "] " + balanzaList[i].getSystemPortName() + ": " + balanzaList[i].getDescriptivePortName() + " - " + balanzaList[i].getPortDescription());
        }
//        balanza.setComPortTimeouts(SerialPort.TIMEOUT_READ_BLOCKING, 0, 0);
//        balanza.setComPortTimeouts(SerialPort.TIMEOUT_READ_SEMI_BLOCKING, 0, 0);
        Float n = Float.parseFloat(lectura.substring(1, 9));
        if (n > 0.2) {
            if (!pesoEstable1.equals("KG ")) {
                this.jBBalanza1.setEnabled(true);
                JOptionPane.showMessageDialog(null, "Lectura fallida");
                lectura = "Error";
                jTFBruto.setText(lectura);
                jBBalanza1.requestFocus();
            } else {
                lectura = lectura.substring(0, lectura.length() - 3);
                this.jBBalanza1.setEnabled(false);
            }
//        }else if (Float.parseFloat(pesoEstable2) > 20){
//            if (!pesoEstable2.equals("KG ")){
//                JOptionPane.showMessageDialog(null, "Lectura fallida");
//                lectura = "Error";
//                this.jBBalanza2.setEnabled(true);
//            } else {
//                lectura = lectura.substring(0, lectura.length() - 3);
//                this.jBBalanza2.setEnabled(false);
//            }
        } else {
            JOptionPane.showMessageDialog(null, "Lectura fallida");
            lectura = "Error";
            jTFBruto.setText(lectura);
            jBBalanza1.requestFocus();
        }

        System.out.println("(" + numRead + " bytes read): \"" + lectura + "\"");
        System.out.println("Reading complete!\n");
        System.out.println("Closing " + balanza.getDescriptivePortName() + ": " + balanza.closePort());

    }

    public boolean validarIngreso() {
        boolean valida = true;
        if (jTFNumero.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Numero incompleto");
            valida = false;
            jTFNumero.requestFocus();
        } else {
            for (Tamboreshomo tambor : controladorT.findTamboreshomoEntities()) {
                if (tambor.getNumero() == jTFNumero.getText()) {
                    if (JOptionPane.showConfirmDialog(null, "El tambor ya existe, desea modificar ", null, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                        actualizarTabla();
                        valida = false;
                        jTFNumero.requestFocus();
                    }
                }
            }
        }

        if (!validaBrutoTara()) {
            valida = false;
        }

        return valida;
    }
    private void jBAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAgregarActionPerformed

        sobrante = "";
        if (validarIngreso()) {

            Tamboreshomo nuevoTambor = new Tamboreshomo();
            float neto;
//            CAMBIO DE FUNCIONALIDAD PARA AGREGAR TAMBORES ALEATORIOS 
            nuevoTambor.setNumero(jTFNumero.getText());
            nuevoTambor.setIdHomo(ho);
            nuevoTambor.setSenasa(jTFSenasa.getText());
            float bruto = Float.parseFloat(lectura.trim());
            nuevoTambor.setBruto(bruto);
            float tara = Float.parseFloat(jTFTara.getText());
            nuevoTambor.setTara(tara);
            neto = bruto - tara;
            nuevoTambor.setNeto(neto);
            if (jCheckBoxSobrante.isSelected()) {
                nuevoTambor.setSobrante(true);

            } else {
                nuevoTambor.setSobrante(false);
            }

            try {
                controladorT.create(nuevoTambor);
                imprimeNeto = Float.toString(neto);
                imprimeNro = Integer.toString(nro);
                if (nuevoTambor.getSobrante()) {
                    sobrante = "S O B R A N T E";
                }
                imprimir();
                actualizarTabla();
                jTFSenasa.requestFocus();

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "error al cargar tambor");
                Logger.getLogger(jDialogHomogeneizado.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jBAgregarActionPerformed

    private void jBEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditarActionPerformed

        float neto;

        if (this.jTable1.getSelectedRowCount() == 1) {
            Tamboreshomo tamborSel = (Tamboreshomo) tamboreshomoList.get(jTable1.getSelectedRow());
//            jTFSenasa.setText(tamborSel.getSenasa());
//            jTFNumero.setText(tamborSel.getNumero());
//            jTFTara.setText(tamborSel.getTara().toString());
//            try {
//                leerBalanza();
            jLNeto.setText(tamborSel.getNeto().toString());
            jTFSenasa.setEditable(true);
            jTFNumero.setEditable(false);
//            } catch (IOException ex) {
//                Logger.getLogger(jDialogHomogeneizado.class.getName()).log(Level.SEVERE, null, ex);
//            }

            float bruto = Float.parseFloat(jTFBruto.getText());
            tamborSel.setBruto(bruto);
            float tara = Float.parseFloat(jTFTara.getText());
            tamborSel.setTara(tara);
            neto = bruto - tara;
            tamborSel.setNeto(neto);
            try {
                controladorT.edit(tamborSel);
                //JOptionPane.showMessageDialog(null, "Tambor cargado");

                imprimeNeto = Float.toString(neto);
                imprimeNro = Integer.toString(nro);
                imprimir();
                actualizarTabla();
//                jTFSenasa.setEditable(true);
                jTFSenasa.requestFocus();

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "error al cargar tambor");
                Logger.getLogger(jDialogHomogeneizado.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
//        } else {
//            JOptionPane.showMessageDialog(null, "Debe seleccionar un tambor", "Validación", JOptionPane.WARNING_MESSAGE);
//        }
            actualizarTabla();
        }
    }//GEN-LAST:event_jBEditarActionPerformed

    private void jBBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBorrarActionPerformed

        if (this.jTable1.getSelectedRowCount() == 1) {
            Tamboreshomo tamborSel = (Tamboreshomo) tamboreshomoList.get(jTable1.getSelectedRow());
            if (JOptionPane.showConfirmDialog(null, "Desea Eliminar", null, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                for (Tamboreshomo tambor : tamboreshomoList) {
                    int numeroT = Integer.parseInt(tambor.getNumero());
                    if(Integer.parseInt(tamborSel.getNumero()) < numeroT) {
                        tambor.setNumero(Integer.toString(numeroT-1));
                        try {
                            controladorT.edit(tambor);
                        } catch (Exception ex) {
                            JOptionPane.showMessageDialog(null, "Error al editar el tambor", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    }

                }
                try {
                    controladorT.destroy(tamborSel.getIdTamboresHomo());
                    JOptionPane.showMessageDialog(null, "Tambor eliminado");
                    actualizarTabla();
                    nro = tamboreshomoList.size() - 1;

                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Error al eliminar el tambor", "Error", JOptionPane.ERROR_MESSAGE);
                    Logger.getLogger(jDialogDescargas.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(null, "El tambor se encuentra clasificado. No se puede eliminar", "Validación", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un tambor", "Validación", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jBBorrarActionPerformed

    private void jBVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVolverActionPerformed
        this.processWindowEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));     }//GEN-LAST:event_jBVolverActionPerformed

    private void jButtonImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImprimirActionPerformed
        if (this.jTable1.getSelectedRowCount() == 1) {
            Tamboreshomo tamborSel = (Tamboreshomo) tamboreshomoList.get(jTable1.getSelectedRow());
            imprimeNeto = String.valueOf(tamborSel.getNeto());
            imprimeNro = String.valueOf(tamborSel.getNumero());
            if (tamborSel.getSobrante()) {
                sobrante = "S O B R A N T E";
            }
            imprimir();
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un tambor", "Validación", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jButtonImprimirActionPerformed

    private void jTFBrutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFBrutoFocusLost
//        boolean val = validaBrutoTara();
    }//GEN-LAST:event_jTFBrutoFocusLost

    public boolean validaBrutoTara() {
        float bruto = 0;
        float tara = 0;
        boolean valida = true;

        if (valida) {
            try {
                tara = parseFloat(jTFTara.getText());
                if (tara > 99) {
                    valida = false;
                    JOptionPane.showMessageDialog(null, "Tara incorrecta");
                    jTFTara.requestFocus();
                }
            } catch (Exception ex) {
                valida = false;
                JOptionPane.showMessageDialog(null, "Ingrese sólo números");
                jTFTara.requestFocus();
            }
        }

        if (valida) {
            try {
                bruto = Float.valueOf(lectura.trim());
                if (bruto > 999) {
                    valida = false;
                    JOptionPane.showMessageDialog(null, "Bruto incorrecto");
                    jTFBruto.requestFocus();
                }
            } catch (Exception ex) {
                valida = false;
                JOptionPane.showMessageDialog(null, "Peso inestable");
                jTFBruto.requestFocus();
            }
        }

        if (valida) {
            float neto = bruto - tara;
            if (neto < 0) {
                valida = false;
                JOptionPane.showMessageDialog(null, "El neto no puede ser negativo");
            } else {
                jLNeto.setText(neto + "");

            }
        }

        return valida;
    }

    private void jTFSenasaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFSenasaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.jTFTara.requestFocus();
            if (tamboreshomoList.size() > ho.getTambores()) {
                JOptionPane.showMessageDialog(null, "La cantidad de Tambores del Homogeneizado esta completa, el siguiente tambor será cargado como sobrante");
                jCheckBoxSobrante.setSelected(true);
            }
        }
    }//GEN-LAST:event_jTFSenasaKeyPressed

    private void jTFTaraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFTaraKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.jBBalanza1.requestFocus();
        }
    }//GEN-LAST:event_jTFTaraKeyPressed

    private void jTFBrutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFBrutoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.jBAgregar.requestFocus();
        }
    }//GEN-LAST:event_jTFBrutoKeyPressed

    private void jBAgregarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBAgregarKeyPressed
        sobrante = "";
        if (validarIngreso()) {

            Tamboreshomo nuevoTambor = new Tamboreshomo();
            float neto;

//            CAMBIO DE FUNCIONALIDAD PARA AGREGAR TAMBORES ALEATORIOS 
            nuevoTambor.setNumero(jTFNumero.getText());
            nuevoTambor.setIdHomo(ho);
            nuevoTambor.setSenasa(jTFSenasa.getText());
            float bruto = Float.parseFloat(jTFBruto.getText());
            nuevoTambor.setBruto(bruto);
            float tara = Float.parseFloat(jTFTara.getText());
            nuevoTambor.setTara(tara);
            neto = bruto - tara;
            nuevoTambor.setNeto(neto);
            if (jCheckBoxSobrante.isSelected()) {
                nuevoTambor.setSobrante(true);

            } else {
                nuevoTambor.setSobrante(false);
            }

            try {
                controladorT.create(nuevoTambor);
                //JOptionPane.showMessageDialog(null, "Tambor cargado");

                imprimeNeto = Float.toString(neto);
                imprimeNro = Integer.toString(nro);
                if (nuevoTambor.getSobrante()) {
                    sobrante = "S O B R A N T E";
                }
                imprimir();
                actualizarTabla();
                jTFSenasa.requestFocus();

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "error al cargar tambor");
                Logger.getLogger(jDialogHomogeneizado.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jBAgregarKeyPressed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        Tamboreshomo tamborSel = (Tamboreshomo) tamboreshomoList.get(jTable1.getSelectedRow());
        jTFSenasa.setText(tamborSel.getSenasa());
        jTFNumero.setText(tamborSel.getNumero());
        jTFTara.setText(tamborSel.getTara().toString());
        jTFBruto.setText(tamborSel.getBruto().toString());
        jLNeto.setText(tamborSel.getNeto().toString());
//        jTFSenasa.setEditable(false);
//        jTFNumero.setEditable(false);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jBBalanza1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBalanza1ActionPerformed
        try {
            leerBalanza();
        } catch (IOException ex) {
            Logger.getLogger(jDialogHomogeneizado.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.jTFBruto.setText(lectura.trim());
        boolean val = validaBrutoTara();
    }//GEN-LAST:event_jBBalanza1ActionPerformed

    private void jBBalanza2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBalanza2ActionPerformed
        try {
            leerBalanza();
        } catch (IOException ex) {
            Logger.getLogger(jDialogHomogeneizado.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.jTFBruto.setText(lectura.trim());
        boolean val = validaBrutoTara();

    }//GEN-LAST:event_jBBalanza2ActionPerformed

    public PageFormat getPageFormat(PrinterJob pj) {

        PageFormat pf = pj.defaultPage();
        Paper paper = pf.getPaper();

        double width = convert_CM_To_PPI(16);      //printer know only point per inch.default value is 72ppi
        double height = convert_CM_To_PPI(5);
        paper.setSize(width, height);
        paper.setImageableArea(
                0,
                0,
                width,
                height
        );   //define boarder size    after that print area width is about 180 points

        pf.setOrientation(PageFormat.PORTRAIT);           //select orientation portrait or landscape but for this time portrait
        pf.setPaper(paper);

        return pf;
    }

    protected static double convert_CM_To_PPI(double cm) {
        return toPPI(cm * 0.393600787);
    }

    protected static double toPPI(double inch) {
        return inch * 72d;
    }

    public class BillPrintable implements Printable {

        public int print(Graphics graphics, PageFormat pageFormat, int pageIndex)
                throws PrinterException {

            int result = NO_SUCH_PAGE;
            if (pageIndex == 0) {

                Graphics2D g2d = (Graphics2D) graphics;

                g2d.translate((int) pageFormat.getImageableX(), (int) pageFormat.getImageableY());

                try {

                    //cambia letra
                    Font font = new Font(Font.SANS_SERIF, Font.BOLD, 16);
                    g2d.setFont(font);
                    //IMPRIME TEXTO GRANDE
                    g2d.drawString("GASRRONI SRL", 70, 20);

                    font = new Font(Font.SANS_SERIF, Font.BOLD, 12);
                    g2d.setFont(font);
                    //IMPRIME TEXTO GRANDE
                    g2d.drawString("MIEL HOMOGENEIZADA", 60, 35);

                    //imprime numero grande
                    font = new Font(Font.SANS_SERIF, Font.BOLD, 28);
                    g2d.setFont(font);
                    g2d.drawString("Tambor # " + imprimeNro, 20, 110);

                    //imprime neto
                    font = new Font(Font.SANS_SERIF, Font.BOLD, 16);
                    g2d.setFont(font);
                    g2d.drawString("Neto ", 200, 95);
                    g2d.drawString(imprimeNeto + "KG.", 190, 110);

                    //imprime lote
                    font = new Font(Font.SANS_SERIF, Font.BOLD, 40);
                    g2d.setFont(font);
                    g2d.drawString("LOTE " + ho.getIdLote(), 30, 75);

                    //imprime neto
                    font = new Font(Font.SANS_SERIF, Font.BOLD, 20);
                    g2d.setFont(font);
                    g2d.drawString(sobrante, 60, 130);

                } catch (Exception r) {
                    r.printStackTrace();
                }

                result = PAGE_EXISTS;
            }
            return result;
        }
    }

    private void imprimir() {
        PrinterJob pj = PrinterJob.getPrinterJob();
        pj.setPrintable(new BillPrintable(), getPageFormat(pj));
        try {
            //for (int i = 0; i < 2; i++) {
            pj.print();
            //}

        } catch (PrinterException ex) {
            ex.printStackTrace();
        }
    }

    public void calculaSeleccion() {
        Tamboreshomo t = new Tamboreshomo();
        int cantidad = 0;
        float totPeso = 0;
        float peso = 0;

        for (int i = 0; i < jTable1.getRowCount(); i++) {

            if (jTable1.isRowSelected(i)) {
                cantidad++;
                t = (Tamboreshomo) tamboreshomoList.get(i);

                //Suma Pesos
                try {
                    peso = t.getNeto();
                } catch (Exception e) {
                    peso = 0;
                }
                totPeso = totPeso + peso;
            }
        }

        DecimalFormat formato1 = new DecimalFormat("#.00");

        this.jTextFieldCantidad.setText(Integer.toString(cantidad));
        this.jTextFieldPesoTotal.setText(formato1.format(totPeso));

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager SegTAPUEntityManager;
    private javax.swing.JButton jBAgregar;
    private javax.swing.JButton jBBalanza1;
    private javax.swing.JButton jBBalanza2;
    private javax.swing.JButton jBBorrar;
    private javax.swing.JButton jBEditar;
    private javax.swing.JButton jBVolver;
    private javax.swing.JButton jButtonImprimir;
    private javax.swing.JCheckBox jCheckBoxSobrante;
    private javax.swing.JTextField jLNeto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelTambores;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFBruto;
    private javax.swing.JTextField jTFFechaHomo;
    private javax.swing.JTextField jTFLote;
    private javax.swing.JTextField jTFNumero;
    private javax.swing.JTextField jTFSenasa;
    public javax.swing.JTextField jTFTara;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldCantidad;
    private javax.swing.JTextField jTextFieldPesoTotal;
    private java.util.List<segta.clases.Tamboreshomo> tamboreshomoList;
    private javax.persistence.Query tamboreshomoQuery;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
