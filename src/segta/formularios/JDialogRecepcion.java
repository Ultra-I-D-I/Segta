/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package segta.formularios;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import segta.clases.TimestampCellRenderer;
import segta.clases.Tambor;
import segta.controladores.TamborJpaController;

/**
 *
 * @author Quales Group
 */
public class JDialogRecepcion extends javax.swing.JDialog {

    /**
     * Creates new form JDialogRecepcion
     */
    public static void centerComponent(Component c) {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = c.getSize();

        if (frameSize.height > screenSize.height) {
            frameSize.height = screenSize.height;
        }

        if (frameSize.width > screenSize.width) {
            frameSize.width = screenSize.width;
        }
        c.setLocation((screenSize.width - frameSize.width) / 2,
                (screenSize.height - frameSize.height) / 2);
    }
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("SegTAPU");
    EntityManager em = emf.createEntityManager();
    TamborJpaController controladorT = new TamborJpaController(emf);
    Tambor tamborSel;

    public JDialogRecepcion(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        tamborList.clear();
        jBIngresar.setEnabled(false);

        DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
        tcr.setHorizontalAlignment(SwingConstants.CENTER);

        jTable2.getColumnModel().getColumn(0).setCellRenderer(tcr);
        jTable2.getColumnModel().getColumn(1).setCellRenderer(tcr);
        jTable2.getColumnModel().getColumn(2).setCellRenderer(tcr);
   

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        SegTAPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("SegTAPU").createEntityManager();
        tamborQuery = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT t FROM Tambor t where  t.recepcion is not null");
        tamborList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(tamborQuery.getResultList());
        jPanel1 = new javax.swing.JPanel();
        jTamborBuscar = new javax.swing.JTextField();
        jBIngresar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Recepci√≥n");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTamborBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTamborBuscarActionPerformed(evt);
            }
        });
        jTamborBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTamborBuscarKeyTyped(evt);
            }
        });

        jBIngresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/add2.png"))); // NOI18N
        jBIngresar.setText("Ingresar");
        jBIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBIngresarActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/aceptar.png"))); // NOI18N
        jButton2.setText("Recepcionar");
        jButton2.setIconTextGap(15);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tamborList, jTable2);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${numero}"));
        columnBinding.setColumnName("Numero");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${senasa}"));
        columnBinding.setColumnName("Senasa");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${neto}"));
        columnBinding.setColumnName("Neto");
        columnBinding.setColumnClass(Float.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jTamborBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBIngresar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(357, 357, 357))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTamborBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void actualizarTabla() {

        tamborList.clear();
        tamborList.addAll(tamborQuery.getResultList());

    }
    private void jBIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBIngresarActionPerformed

        ingresaTambor();
        this.jBIngresar.setEnabled(false);

    }//GEN-LAST:event_jBIngresarActionPerformed

    private void jTamborBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTamborBuscarActionPerformed
        jBIngresarActionPerformed(evt);
    }//GEN-LAST:event_jTamborBuscarActionPerformed

    private void jTamborBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTamborBuscarKeyTyped
        this.jBIngresar.setEnabled(true);
    }//GEN-LAST:event_jTamborBuscarKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
        String fechaS = dtf.format(LocalDateTime.now());
        Date fechaD = null;
        try {
            fechaD = (Date) new SimpleDateFormat("yyyy/MM/dd HH:mm:ss").parse(fechaS);

        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, "Error al registrar la fecha", "Informaci√≥n", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(jDialogDescargas.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(JDialogRecepcion.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (Tambor t : tamborList) {
                t.setRecepcion(fechaD);
            try {
                controladorT.edit(t);
            } catch (Exception ex) {
                Logger.getLogger(JDialogRecepcion.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        JOptionPane.showMessageDialog(this, "Se Recepcionaron " + tamborList.size() + " Tambores");
        this.processWindowEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
 
    }//GEN-LAST:event_jButton2ActionPerformed

    public void ingresaTambor() {

        int numero = 0;

        if (!jTamborBuscar.getText().isEmpty()) {
            try {
                numero = Integer.parseInt(jTamborBuscar.getText());
                String q = "SELECT t FROM Tambor t WHERE t.estado='descargado' and t.numero = " + numero;
                tamborQuery = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery(q);
                tamborSel = (Tambor) tamborQuery.getSingleResult();

                if (tamborSel.getRecepcion() != null) {
                    JOptionPane.showMessageDialog(null, "El tambor se ya encuentra recepcionado", "Ingrese otro Tambor", JOptionPane.WARNING_MESSAGE);
                    jTamborBuscar.setText("");
                    jTamborBuscar.requestFocus();
                } else if (tamborList.contains(tamborSel)) {
                    jTamborBuscar.requestFocus();
                    jTamborBuscar.setText("");
                    JOptionPane.showMessageDialog(null, "El tambor ya se encuentra registrado ", "Ingrese otro Tambor", JOptionPane.WARNING_MESSAGE);

                } else {

                    tamborList.add(tamborSel);
                }
            } catch (Exception e) {
            }
        }
        jTamborBuscar.requestFocus();
        jTamborBuscar.setText("");
        this.jBIngresar.setEnabled(false);

    }

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager SegTAPUEntityManager;
    private javax.swing.JButton jBIngresar;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTamborBuscar;
    private java.util.List<segta.clases.Tambor> tamborList;
    private javax.persistence.Query tamborQuery;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
