/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package segta.formularios;

import java.awt.Component;
import java.awt.event.WindowEvent;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import segta.Conexion;
import segta.clases.Contrato;
import segta.clases.Descargas;
import segta.clases.Lote;
import segta.clases.Lotecontrato;
import segta.controladores.LoteJpaController;
import segta.controladores.LotecontratoJpaController;
import segta.controladores.exceptions.NonexistentEntityException;

/**
 *
 * @author MODERNIZACION3
 */
public class JDialogLoteoContrato extends javax.swing.JDialog {

    /**
     * Creates new form JDialogLoteoContrato
     */
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("SegTAPU");
    EntityManager em = emf.createEntityManager();
    LoteJpaController controladorL = new LoteJpaController(emf);
    LotecontratoJpaController controladorLC = new LotecontratoJpaController(emf);

    Contrato contrato;
    Lote lote;
    String control;
    Lotecontrato loteo;

    public JDialogLoteoContrato(javax.swing.JDialog parent, boolean modal, Contrato co) {
        super(parent, modal);
        this.setLocationRelativeTo(null);
        contrato = co;
        
        initComponents();
        this.jTextFieldContrato.setText(contrato.getNumero());
        this.jTextFieldCliente.setText(contrato.getIdCliente().getRazonSocial());
        DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
        tcr.setHorizontalAlignment(SwingConstants.CENTER);
        //jTableLote.getColumnModel().getColumn(1).setCellRenderer(tcr);
        jTableLote.getColumnModel().getColumn(2).setCellRenderer(tcr);
        jTableLote.getColumnModel().getColumn(3).setCellRenderer(tcr);
        jTableLote.getColumnModel().getColumn(4).setCellRenderer(tcr);
        jTableLote.getColumnModel().getColumn(5).setCellRenderer(tcr);
        jTableLote.getColumnModel().getColumn(6).setCellRenderer(tcr);
        jTableLote.getColumnModel().getColumn(7).setCellRenderer(tcr);
        jTableLote.getColumnModel().getColumn(8).setCellRenderer(tcr);
       
       
        
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        SegTAPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("SegTAPU").createEntityManager();
        loteQuery = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT l FROM Lote l WHERE l.idLoteContrato=:loteoSel ").setParameter("loteoSel",loteo);
        loteList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(loteQuery.getResultList());
        lotecontratoQuery = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT l FROM Lotecontrato l WHERE l.idContrato=:pContrato").setParameter("pContrato",contrato);
        lotecontratoList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(lotecontratoQuery.getResultList());
        jPanel1 = new javax.swing.JPanel();
        jPanelTabla = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableLote = new javax.swing.JTable();
        jBDatosLotes = new javax.swing.JButton();
        jBQa = new javax.swing.JButton();
        jBTrace = new javax.swing.JButton();
        jBVolver = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableLoteo = new javax.swing.JTable();
        jBAgregar = new javax.swing.JButton();
        jBEditar1 = new javax.swing.JButton();
        jBBorrar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldContrato = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldCliente = new javax.swing.JTextField();
        jBEstado = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ITEMS CONTRATO");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelTabla.setBorder(javax.swing.BorderFactory.createTitledBorder("Lotes asociados"));

        jTableLote.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, loteList, jTableLote);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${lote}"));
        columnBinding.setColumnName("Lote");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${despacho}"));
        columnBinding.setColumnName("Despacho");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${netoLote}"));
        columnBinding.setColumnName("Neto Grupo");
        columnBinding.setColumnClass(Float.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${netoDespachado}"));
        columnBinding.setColumnName("Neto Despachado");
        columnBinding.setColumnClass(Float.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${numeroDespacho}"));
        columnBinding.setColumnName("Numero Despacho");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${factura}"));
        columnBinding.setColumnName("Factura");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${puertoOrigen}"));
        columnBinding.setColumnName("Puerto Origen");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${lugarDeEntrega}"));
        columnBinding.setColumnName("Lugar de Entrega");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${descripcion}"));
        columnBinding.setColumnName("Descripcion");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jTableLote.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableLoteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableLote);

        jBDatosLotes.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBDatosLotes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/editar.png"))); // NOI18N
        jBDatosLotes.setText("LOTE");
        jBDatosLotes.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBDatosLotes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDatosLotesActionPerformed(evt);
            }
        });

        jBQa.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBQa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/report2.png"))); // NOI18N
        jBQa.setText("QA ");
        jBQa.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBQa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBQaActionPerformed(evt);
            }
        });

        jBTrace.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBTrace.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/report2.png"))); // NOI18N
        jBTrace.setText("TRACE");
        jBTrace.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBTrace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTraceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTablaLayout = new javax.swing.GroupLayout(jPanelTabla);
        jPanelTabla.setLayout(jPanelTablaLayout);
        jPanelTablaLayout.setHorizontalGroup(
            jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTablaLayout.createSequentialGroup()
                .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTablaLayout.createSequentialGroup()
                        .addComponent(jBQa, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBTrace, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBDatosLotes, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1168, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelTablaLayout.setVerticalGroup(
            jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTablaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBDatosLotes, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBQa, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBTrace, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jBVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/volver icono.png"))); // NOI18N
        jBVolver.setText("VOLVER");
        jBVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVolverActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Items Contrato"));
        jPanel2.setPreferredSize(new java.awt.Dimension(700, 255));

        jTableLoteo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, lotecontratoList, jTableLoteo);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${item}"));
        columnBinding.setColumnName("Item");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fechaEntrega}"));
        columnBinding.setColumnName("Fecha Entrega");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${color}"));
        columnBinding.setColumnName("Color");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cantLotes}"));
        columnBinding.setColumnName("Cant Grupo");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${maxTambores}"));
        columnBinding.setColumnName("Neto Grupo");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${estado}"));
        columnBinding.setColumnName("Estado");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jTableLoteo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableLoteoMouseClicked(evt);
            }
        });
        jTableLoteo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableLoteoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableLoteoKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTableLoteo);

        jBAgregar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/add icono.png"))); // NOI18N
        jBAgregar.setText("AGREGAR");
        jBAgregar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAgregarActionPerformed(evt);
            }
        });

        jBEditar1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBEditar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/editar.png"))); // NOI18N
        jBEditar1.setText("EDITAR");
        jBEditar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBEditar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditar1ActionPerformed(evt);
            }
        });

        jBBorrar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/borrar.png"))); // NOI18N
        jBBorrar.setText("BORRAR");
        jBBorrar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBorrarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("CONTRATO:");

        jTextFieldContrato.setEditable(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("CLIENTE");

        jTextFieldCliente.setEditable(false);

        jBEstado.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jBEstado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/desclasificar icono.png"))); // NOI18N
        jBEstado.setText("ESTADO");
        jBEstado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEstadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jBEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBEditar1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(476, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldContrato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBEditar1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelTabla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1190, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 1210, 570));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/fondo dialog.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1260, 600));

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVolverActionPerformed
        this.processWindowEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_jBVolverActionPerformed

    private void jBDatosLotesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDatosLotesActionPerformed

         if (this.jTableLote.getSelectedRowCount() == 1) {
            lote = loteList.get(jTableLote.getSelectedRow());
            new JDialogDatosLote(this, true,lote).setVisible(true);
            actualizarTablaLote();
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un Lote", "Validación", JOptionPane.WARNING_MESSAGE);
          
        }
    }//GEN-LAST:event_jBDatosLotesActionPerformed

    private void jTableLoteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableLoteMouseClicked
        lote = loteList.get(jTableLote.getSelectedRow());
        
    }//GEN-LAST:event_jTableLoteMouseClicked

    private void jTableLoteoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableLoteoMouseClicked
        seleccionaLoteo();
    }//GEN-LAST:event_jTableLoteoMouseClicked

    private void jBAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAgregarActionPerformed
       
       new JDialogEditLoteoContrato(this, true,contrato,null,"nuevo").setVisible(true);
       actualizarTabla();
        
        

    }//GEN-LAST:event_jBAgregarActionPerformed

    private void jBEditar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditar1ActionPerformed
        if (this.jTableLoteo.getSelectedRowCount() == 1) {
            loteo = lotecontratoList.get(jTableLoteo.getSelectedRow());
            if (loteo.getEstado().equals("abierto")){
                new JDialogEditLoteoContrato(this, true,contrato,loteo,"editar").setVisible(true);
                actualizarTabla();
            }else{
                JOptionPane.showMessageDialog(null, "El Item se encuentra cerrado", "Validación", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un Item", "Validación", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jBEditar1ActionPerformed

    private void jBBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBorrarActionPerformed

        if (this.jTableLoteo.getSelectedRowCount() == 1) {
           loteo = lotecontratoList.get(jTableLoteo.getSelectedRow());
           if (loteo.getLoteCollection().size()==0){
               if (JOptionPane.showConfirmDialog(null, "Desea Eliminar", null, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    try {
                        controladorLC.destroy(loteo.getIdloteContrato());
                        actualizarTabla();
                    } catch (NonexistentEntityException ex) {
                        JOptionPane.showMessageDialog(null,"Erro al eliminar el Item", "Validación", JOptionPane.WARNING_MESSAGE); 
                        Logger.getLogger(JDialogLoteoContrato.class.getName()).log(Level.SEVERE, null, ex);
                    }
               }
           } else{
              JOptionPane.showMessageDialog(null, "No se puede eliminar ya que tiene Lotes asociados", "Validación", JOptionPane.WARNING_MESSAGE); 
           }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un Item", "Validación", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jBBorrarActionPerformed

    private void jTableLoteoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableLoteoKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTableLoteoKeyPressed

    private void jTableLoteoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableLoteoKeyReleased
       seleccionaLoteo();
    }//GEN-LAST:event_jTableLoteoKeyReleased

    private void jBEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEstadoActionPerformed
         if (this.jTableLoteo.getSelectedRowCount() == 1) {
           loteo = lotecontratoList.get(jTableLoteo.getSelectedRow());
               
               if (JOptionPane.showConfirmDialog(null, "Desea Cambiar el estado del Item?", null, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    try {
                        if (loteo.getEstado().equals("abierto")){
                            loteo.setEstado("cerrado");
                        }else{
                            loteo.setEstado("abierto");
                        }
                        controladorLC.edit(loteo);
                        actualizarTabla();
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null,"Error al cambiar el estado del Item", "Validación", JOptionPane.WARNING_MESSAGE); 
                        Logger.getLogger(JDialogLoteoContrato.class.getName()).log(Level.SEVERE, null, ex);
                    }
               }
         
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un Item", "Validación", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jBEstadoActionPerformed

    private void jBQaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBQaActionPerformed
       if (this.jTableLote.getSelectedRowCount() == 1) {
            try {
                Conexion conn = new Conexion();
                Lote lot = loteList.get(jTableLote.getSelectedRow());
                conn.conectar();
                HashMap parameterMap = new HashMap();
                parameterMap.put("pLote", lot.getIdLote());
                java.io.File file = new java.io.File("TestWindow.java");
                String path = file.getAbsolutePath();
                String only_path = path.substring(0,path.lastIndexOf('\\'));
                JasperPrint reporte= JasperFillManager.fillReport(only_path + "/reportQA.jasper",parameterMap, conn.getConn());
                JasperViewer  visor = new JasperViewer(reporte,false) ;
                visor.setVisible(true) ;
                visor.setDefaultCloseOperation(javax.swing.JDialog.HIDE_ON_CLOSE );
                conn.desconectar();
            } catch (Exception ex) {
                      
                Logger.getLogger(jDialogDescargas.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }else{
            JOptionPane.showMessageDialog(null, "Debe seleccionar un Lote", "Validación", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jBQaActionPerformed

    private void jBTraceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTraceActionPerformed
        if (this.jTableLote.getSelectedRowCount() == 1) {
            Lote lot = loteList.get(jTableLote.getSelectedRow());
            if (lot.getDespacho() != null) {
                try {
                
                    Conexion conn = new Conexion();
                    conn.conectar();
                    HashMap parameterMap = new HashMap();
                    parameterMap.put("pLote", lot.getIdLote());
                    java.io.File file = new java.io.File("TestWindow.java");
                    String path = file.getAbsolutePath();
                    String only_path = path.substring(0,path.lastIndexOf('\\'));
                    JasperPrint reporte= JasperFillManager.fillReport(only_path + "/reportTrace2.jasper",parameterMap, conn.getConn());
                    JasperViewer  visor = new JasperViewer(reporte,false) ;
                    visor.setVisible(true) ;
                    visor.setDefaultCloseOperation(javax.swing.JDialog.HIDE_ON_CLOSE );
                    conn.desconectar();
                } catch (Exception ex) {
                    Logger.getLogger(jDialogDescargas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                JOptionPane.showMessageDialog(null, "El Lote aún no se ha despachado", "Validación", JOptionPane.WARNING_MESSAGE);
            }
            
        }else{
            JOptionPane.showMessageDialog(null, "Debe seleccionar un Lote", "Validación", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jBTraceActionPerformed
private void actualizaLotes(){
        loteList.clear();
        loteList.addAll(loteQuery.getResultList());
}


    private void activarTabla() {
        for (Component component : jPanelTabla.getComponents()) {
            component.setEnabled(true);
        }
        this.jTableLote.setEnabled(true);
    }

    private void desactivarTabla() {
        for (Component component : jPanelTabla.getComponents()) {
            component.setEnabled(false);
        }
        this.jTableLote.setEnabled(false);
    }
    
    private void actualizarTablaLote(){
        loteList.clear();
        loteList.addAll(loteQuery.getResultList());
    
    }
    
     private void actualizarTabla(){
        lotecontratoList.clear();
        lotecontratoList.addAll(lotecontratoQuery.getResultList());
    
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager SegTAPUEntityManager;
    private javax.swing.JButton jBAgregar;
    private javax.swing.JButton jBBorrar;
    private javax.swing.JButton jBDatosLotes;
    private javax.swing.JButton jBEditar1;
    private javax.swing.JButton jBEstado;
    private javax.swing.JButton jBQa;
    private javax.swing.JButton jBTrace;
    private javax.swing.JButton jBVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelTabla;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableLote;
    private javax.swing.JTable jTableLoteo;
    private javax.swing.JTextField jTextFieldCliente;
    private javax.swing.JTextField jTextFieldContrato;
    private java.util.List<segta.clases.Lote> loteList;
    private javax.persistence.Query loteQuery;
    private java.util.List<segta.clases.Lotecontrato> lotecontratoList;
    private javax.persistence.Query lotecontratoQuery;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private void seleccionaLoteo() {
         loteo = lotecontratoList.get(jTableLoteo.getSelectedRow());
         loteQuery.setParameter("loteoSel",loteo);
         actualizarTablaLote();
    }
}
