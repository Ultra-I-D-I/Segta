/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package segta.formularios;

import java.awt.event.WindowEvent;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import segta.clases.Cliente;
import segta.clases.Color;
import segta.clases.Lote;
import segta.clases.Proveedor;
import segta.clases.Sector;
import segta.clases.Tambor;
import segta.controladores.TamborJpaController;

/**
 *
 * @author MODERNIZACION3
 */
public class jDialogTamboresGeneral extends javax.swing.JDialog {

    /**
     * Creates new form jDialogTamboresGeneral
     */
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("SegTAPU");
    EntityManager em = emf.createEntityManager();
    TamborJpaController controladorT = new TamborJpaController(emf);
    Tambor tamborSel;
    Proveedor provSel;
    List<Tambor> tambor = new ArrayList();

    public jDialogTamboresGeneral(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
//        DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
//        tcr.setHorizontalAlignment(SwingConstants.CENTER);
//        jTableTambores.getColumnModel().getColumn(0).setCellRenderer(tcr);
//        jTableTambores.getColumnModel().getColumn(1).setCellRenderer(tcr);
//        //jTableTambores.getColumnModel().getColumn(2).setCellRenderer(tcr);
//        jTableTambores.getColumnModel().getColumn(3).setCellRenderer(tcr);
//        //jTableTambores.getColumnModel().getColumn(4).setCellRenderer(tcr);
//        jTableTambores.getColumnModel().getColumn(5).setCellRenderer(tcr);
//        jTableTambores.getColumnModel().getColumn(6).setCellRenderer(tcr);
//        jTableTambores.getColumnModel().getColumn(7).setCellRenderer(tcr);
//        jTableTambores.getColumnModel().getColumn(8).setCellRenderer(tcr);
//        jTableTambores.getColumnModel().getColumn(9).setCellRenderer(tcr);
//        jTableTambores.getColumnModel().getColumn(10).setCellRenderer(tcr);
//        jTableTambores.getColumnModel().getColumn(11).setCellRenderer(tcr);
//        jTableTambores.getColumnModel().getColumn(12).setCellRenderer(tcr);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        SegTAPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("SegTAPU").createEntityManager();
        colorQuery = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT c FROM Color c ORDER BY c.color");
        colorList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : colorQuery.getResultList();
        sectorQuery = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT s FROM Sector s ORDER BY s.nombre");
        sectorList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : sectorQuery.getResultList();
        clienteQuery = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT c FROM Cliente c ORDER BY c.razonSocial");
        clienteList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : clienteQuery.getResultList();
        proveedorQuery = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT p FROM Proveedor p ORDER BY p.razonSocial");
        proveedorList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : proveedorQuery.getResultList();
        loteQuery = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT l FROM Lote l");
        loteList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : loteQuery.getResultList();
        tamborQuery = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT t FROM Tambor t Where t.estado != 'despachado' ORDER BY t.numero");
        tamborList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() :  org.jdesktop.observablecollections.ObservableCollections.observableList(tamborQuery.getResultList());
        proveedorQuery1 = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT p FROM Proveedor p");
        proveedorList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : proveedorQuery1.getResultList();
        sectorQuery1 = java.beans.Beans.isDesignTime() ? null : SegTAPUEntityManager.createQuery("SELECT s FROM Sector s ORDER BY s.nombre");
        sectorList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : sectorQuery1.getResultList();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jCBProveedor = new javax.swing.JComboBox<>();
        jCBCliente = new javax.swing.JComboBox<>();
        jCBSector = new javax.swing.JComboBox<>();
        jCBColor = new javax.swing.JComboBox<>();
        jBBuscar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jCBLote = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTFNumero = new javax.swing.JTextField();
        jTFSenasa = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTFContrato = new javax.swing.JTextField();
        jCBTrazado = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jCBEstado = new javax.swing.JComboBox<>();
        dateChooser = new datechooser.beans.DateChooserCombo();
        jLabel12 = new javax.swing.JLabel();
        jBVolver = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableTambores = new javax.swing.JTable();
        jBTrazar = new javax.swing.JButton();
        jBCambiarProductor = new javax.swing.JButton();
        jBCambiarSector = new javax.swing.JButton();
        jBCambiarSector1 = new javax.swing.JButton();
        jTextCantidad = new javax.swing.JTextField();
        Cantidad = new javax.swing.JLabel();
        Cantidad1 = new javax.swing.JLabel();
        jTextPeso = new javax.swing.JTextField();
        Cantidad2 = new javax.swing.JLabel();
        jTextColor = new javax.swing.JTextField();
        Cantidad3 = new javax.swing.JLabel();
        jTextHumedad = new javax.swing.JTextField();
        jBCambiarProductor1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        Color c = new Color();
        c.setColor("Todos");
        colorList.add(0,c);

        Sector s = new Sector();
        s.setNombre("Todos");
        sectorList.add(0,s);

        Cliente cl = new Cliente();
        cl.setRazonSocial("Todos");
        clienteList.add(0,cl);

        Proveedor p = new Proveedor();
        p.setRazonSocial("Todos");
        proveedorList.add(0,p);

        Lote l = new Lote();
        l.setLote("Todos");
        loteList.add(0,l);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("TAMBORES");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(1380, 700));

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, proveedorList, jCBProveedor);
        bindingGroup.addBinding(jComboBoxBinding);

        jCBCliente.addItem("Todos");

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, clienteList, jCBCliente);
        bindingGroup.addBinding(jComboBoxBinding);

        jCBSector.addItem("Todos");
        jCBSector.addItem("Sin asignar");

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, sectorList, jCBSector);
        bindingGroup.addBinding(jComboBoxBinding);

        jCBSector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBSectorActionPerformed(evt);
            }
        });

        jCBColor.addItem("Todos");

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, colorList, jCBColor);
        bindingGroup.addBinding(jComboBoxBinding);

        jBBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/buscar icono.png"))); // NOI18N
        jBBuscar.setText("BUSCAR");
        jBBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarActionPerformed(evt);
            }
        });

        jLabel2.setText("APICULTOR");

        jLabel3.setText("COLOR");

        jLabel4.setText("CLIENTE");

        jLabel5.setText("GRUPO");

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, loteList, jCBLote);
        bindingGroup.addBinding(jComboBoxBinding);

        jLabel6.setText("LOTE");

        jLabel7.setText("SENASA");

        jLabel8.setText("NUMERO DE TAMBOR");

        jLabel9.setText("CONTRATO");

        jCBTrazado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "No", "Si" }));

        jLabel10.setText("TRAZADO");

        jLabel11.setText("ESTADO");

        jCBEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "En stock", "Todos", "Despachado", "Descargado", "Clasificado", "Loteado" }));

        dateChooser.setWeekStyle(datechooser.view.WeekDaysStyle.SHORT);
        try {
            dateChooser.setDefaultPeriods(new datechooser.model.multiple.PeriodSet());
        } catch (datechooser.model.exeptions.IncompatibleDataExeption e1) {
            e1.printStackTrace();
        }
        dateChooser.setFieldFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 12));

        jLabel12.setText("FECHA DESCARGA");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(94, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel7)
                        .addComponent(jTFSenasa)
                        .addComponent(jTFNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jCBProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCBCliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)))
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9)
                    .addComponent(jLabel5)
                    .addComponent(jTFContrato)
                    .addComponent(jCBSector, 0, 136, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(jCBColor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCBLote, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jCBTrazado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCBEstado, 0, 148, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addContainerGap(94, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCBColor, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel8)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCBProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCBSector, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(jLabel4))
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTFSenasa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFContrato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCBCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCBTrazado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCBEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCBLote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jCBProveedor.getAccessibleContext().setAccessibleName("");
        jCBCliente.getAccessibleContext().setAccessibleName("");
        jCBSector.getAccessibleContext().setAccessibleName("");
        jCBColor.getAccessibleContext().setAccessibleName("");

        jBVolver.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/volver icono.png"))); // NOI18N
        jBVolver.setText("VOLVER");
        jBVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVolverActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTableTambores.setColumnSelectionAllowed(true);
        jTableTambores.getTableHeader().setReorderingAllowed(false);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tamborList, jTableTambores);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${numero}"));
        columnBinding.setColumnName("Numero");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${identificador}"));
        columnBinding.setColumnName("Identif.");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${senasa}"));
        columnBinding.setColumnName("Senasa");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${senasanueva}"));
        columnBinding.setColumnName("Etiqueta Nueva");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${trazabilidad}"));
        columnBinding.setColumnName("Trazado");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${neto}"));
        columnBinding.setColumnName("Neto");
        columnBinding.setColumnClass(Float.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${bruto}"));
        columnBinding.setColumnName("Bruto");
        columnBinding.setColumnClass(Float.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tara}"));
        columnBinding.setColumnName("Tara");
        columnBinding.setColumnClass(Float.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idDescarga.fecha}"));
        columnBinding.setColumnName("F. Descarga");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idSector.nombre}"));
        columnBinding.setColumnName("Grupo");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${estado}"));
        columnBinding.setColumnName("Estado");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idLote.lote}"));
        columnBinding.setColumnName("Lote");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idColor.color}"));
        columnBinding.setColumnName("Color");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${humedad}"));
        columnBinding.setColumnName("Humedad");
        columnBinding.setColumnClass(Float.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dextrina}"));
        columnBinding.setColumnName("Dextrina");
        columnBinding.setColumnClass(Float.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${estadoTambor}"));
        columnBinding.setColumnName("Tambor");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idDescarga.idProveedor.razonSocial}"));
        columnBinding.setColumnName("Acopiador");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idProveedor.razonSocial}"));
        columnBinding.setColumnName("Apicultor");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idProveedorVenta.razonSocial}"));
        columnBinding.setColumnName("Ap. Venta");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idLote.idLoteContrato.idContrato.numero}"));
        columnBinding.setColumnName("Contrato");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idLote.idLoteContrato.idContrato.idCliente.razonSocial}"));
        columnBinding.setColumnName("Cliente");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${observaciones}"));
        columnBinding.setColumnName("Observaciones");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jTableTambores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableTamboresMouseClicked(evt);
            }
        });
        jTableTambores.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                /*
                ListSelectionModel sm = (ListSelectionModel) e.getSource();
                int sum = 0;
                for (int i = sm.getMinSelectionIndex(); i <= sm.getMaxSelectionIndex(); i++) {
                    sum += sm.isSelectedIndex(i) ? 1 : 0;
                }
                contadorT=Integer.toString(sum);
                */
                calculaSeleccion();
            }
        });
        jScrollPane1.setViewportView(jTableTambores);
        jTableTambores.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (jTableTambores.getColumnModel().getColumnCount() > 0) {
            jTableTambores.getColumnModel().getColumn(4).setMinWidth(50);
            jTableTambores.getColumnModel().getColumn(4).setPreferredWidth(50);
            jTableTambores.getColumnModel().getColumn(4).setMaxWidth(50);
            jTableTambores.getColumnModel().getColumn(5).setMinWidth(40);
            jTableTambores.getColumnModel().getColumn(5).setPreferredWidth(40);
            jTableTambores.getColumnModel().getColumn(5).setMaxWidth(40);
            jTableTambores.getColumnModel().getColumn(6).setMinWidth(40);
            jTableTambores.getColumnModel().getColumn(6).setPreferredWidth(40);
            jTableTambores.getColumnModel().getColumn(6).setMaxWidth(40);
            jTableTambores.getColumnModel().getColumn(7).setMinWidth(40);
            jTableTambores.getColumnModel().getColumn(7).setPreferredWidth(40);
            jTableTambores.getColumnModel().getColumn(7).setMaxWidth(40);
            jTableTambores.getColumnModel().getColumn(9).setMinWidth(40);
            jTableTambores.getColumnModel().getColumn(9).setPreferredWidth(40);
            jTableTambores.getColumnModel().getColumn(9).setMaxWidth(40);
            jTableTambores.getColumnModel().getColumn(11).setMinWidth(40);
            jTableTambores.getColumnModel().getColumn(11).setPreferredWidth(40);
            jTableTambores.getColumnModel().getColumn(11).setMaxWidth(40);
            jTableTambores.getColumnModel().getColumn(12).setMinWidth(40);
            jTableTambores.getColumnModel().getColumn(12).setPreferredWidth(40);
            jTableTambores.getColumnModel().getColumn(12).setMaxWidth(40);
            jTableTambores.getColumnModel().getColumn(13).setMinWidth(60);
            jTableTambores.getColumnModel().getColumn(13).setPreferredWidth(60);
            jTableTambores.getColumnModel().getColumn(13).setMaxWidth(60);
            jTableTambores.getColumnModel().getColumn(14).setMinWidth(60);
            jTableTambores.getColumnModel().getColumn(14).setPreferredWidth(60);
            jTableTambores.getColumnModel().getColumn(14).setMaxWidth(60);
        }

        jBTrazar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/trazar icono.png"))); // NOI18N
        jBTrazar.setText("TRAZAR");
        jBTrazar.setIconTextGap(10);
        jBTrazar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTrazarActionPerformed(evt);
            }
        });

        jBCambiarProductor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/cambiar icono.png"))); // NOI18N
        jBCambiarProductor.setText("AP. VENTA");
        jBCambiarProductor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCambiarProductorActionPerformed(evt);
            }
        });

        jBCambiarSector.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/actualizar.png"))); // NOI18N
        jBCambiarSector.setText("CAMBIAR GRUPO");
        jBCambiarSector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCambiarSectorActionPerformed(evt);
            }
        });

        jBCambiarSector1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/report2.png"))); // NOI18N
        jBCambiarSector1.setText("ETIQUETA");
        jBCambiarSector1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCambiarSector1ActionPerformed(evt);
            }
        });

        jTextCantidad.setEditable(false);
        jTextCantidad.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        Cantidad.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        Cantidad.setText("Tambores");

        Cantidad1.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        Cantidad1.setText("Peso");

        jTextPeso.setEditable(false);
        jTextPeso.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        Cantidad2.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        Cantidad2.setText("Color");

        jTextColor.setEditable(false);
        jTextColor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextColorActionPerformed(evt);
            }
        });

        Cantidad3.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        Cantidad3.setText("Humedad");

        jTextHumedad.setEditable(false);
        jTextHumedad.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jBCambiarProductor1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/cambiar icono.png"))); // NOI18N
        jBCambiarProductor1.setText("APICULTOR");
        jBCambiarProductor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCambiarProductor1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBTrazar, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBCambiarProductor1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBCambiarProductor, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jBCambiarSector1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jBCambiarSector, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(Cantidad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(Cantidad1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Cantidad2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextColor, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Cantidad3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextHumedad, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1366, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBTrazar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBCambiarSector, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBCambiarSector1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cantidad)
                    .addComponent(jTextPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cantidad1)
                    .addComponent(Cantidad2)
                    .addComponent(jTextColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cantidad3)
                    .addComponent(jTextHumedad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBCambiarProductor1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBCambiarProductor, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 1223, Short.MAX_VALUE)
                .addComponent(jBVolver)
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/segta/imagenes/fondo dialog.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -30, -1, -1));

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextColorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextColorActionPerformed

    private void jBCambiarSector1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCambiarSector1ActionPerformed
        if (this.jTableTambores.getSelectedRowCount() == 1) {
            tamborSel = (Tambor) tamborList.get(jTableTambores.getSelectedRow());
            if (tamborSel.getEstado().equals("despachado")) {
                JOptionPane.showMessageDialog(null, "El tambor ya se encuentra despachado", "Validación", JOptionPane.WARNING_MESSAGE);
            } else {
                new JDialogEtiqueta(this, true, tamborSel).setVisible(true);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un Tambor", "Validación", JOptionPane.WARNING_MESSAGE);
        }

        tamborList.clear();
        tamborList.addAll(tamborQuery.getResultList());
    }//GEN-LAST:event_jBCambiarSector1ActionPerformed

    private void jBCambiarSectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCambiarSectorActionPerformed
        if (this.jTableTambores.getSelectedRowCount() != 0) {

            boolean validacion = false;
            JComboBox jComboBoxCambiaLote = new JComboBox((Vector) sectorList1);
            int input = JOptionPane.showConfirmDialog(this, jComboBoxCambiaLote, "Seleccione Grupo", JOptionPane.DEFAULT_OPTION);

            if (input == JOptionPane.OK_OPTION) {

                Sector loteSel = (Sector) jComboBoxCambiaLote.getSelectedItem();

                for (int i = 0; i < jTableTambores.getRowCount(); i++) {

                    if (jTableTambores.isRowSelected(i)) {

                        tamborSel = (Tambor) tamborList.get(i);
                        if (tamborSel.getEstado().equals("despachado") || tamborSel.getEstado().equals("loteado")) {
                            validacion = true;
                        } else {
                            tamborSel.setIdSector(loteSel);
                            try {
                                controladorT.edit(tamborSel);
                            } catch (Exception ex) {
                                validacion = true;
                                Logger.getLogger(jDialogTamboresGeneral.class.getName()).log(Level.SEVERE, null, ex);
                            }

                        }

                    }

                }
                if (validacion) {
                    JOptionPane.showMessageDialog(null, "Hay tambores que no se pudieron cambiar ya que se encontarban despachados o en lote", "Validación", JOptionPane.WARNING_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Todos los tambores fueron modificados con éxito", "Validación", JOptionPane.INFORMATION_MESSAGE);
                }
            
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un Tambor", "Validación", JOptionPane.WARNING_MESSAGE);
        }

        tamborList.clear();
        tamborList.addAll(tamborQuery.getResultList());
    }//GEN-LAST:event_jBCambiarSectorActionPerformed

    private void jTableTamboresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableTamboresMouseClicked

        //tamborSel = (Tambor) tamborList.get(jTableTambores.getSelectedRow());
    }//GEN-LAST:event_jTableTamboresMouseClicked

    private void jBCambiarProductorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCambiarProductorActionPerformed

        if (this.jTableTambores.getSelectedRowCount() != 0) {
            tambor.clear();
            for (int i = 0; i < jTableTambores.getRowCount(); i++) {
                if (jTableTambores.isRowSelected(i)) {
                    tambor.add(tamborList.get(i));
                }
            }
            int reply = JOptionPane.showConfirmDialog(null, jCBProveedor, "Selecione el Apicultor de Venta", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {
                provSel = (Proveedor) jCBProveedor.getSelectedItem();
                for (int i = 0; i < tambor.size(); i++) {
                    tamborSel = (Tambor) tambor.get(i);
                    tamborSel.setIdProveedorVenta(provSel);
                    try {
                        controladorT.edit(tamborSel);
                    } catch (Exception ex) {
                        Logger.getLogger(jDialogTamboresGeneral.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } 
            tamborList.clear();
            tamborList.addAll(tamborQuery.getResultList());

        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un Tambor", "Validación", JOptionPane.WARNING_MESSAGE);
        }
        tamborList.clear();
        tamborList.addAll(tamborQuery.getResultList());
    }//GEN-LAST:event_jBCambiarProductorActionPerformed

    private void jBTrazarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTrazarActionPerformed
        boolean validacion = false;
        if (this.jTableTambores.getSelectedRowCount() != 0) {
            for (int i = 0; i < jTableTambores.getRowCount(); i++) {

                if (jTableTambores.isRowSelected(i)) {

                    tamborSel = (Tambor) tamborList.get(i);
                    if (!tamborSel.getTrazabilidad()) {
                        tamborSel.setTrazabilidad(true);
                    } else {
                        tamborSel.setTrazabilidad(false);
                    }
                    try {
                        controladorT.edit(tamborSel);
                    } catch (Exception ex) {
                        validacion = true;
                        Logger.getLogger(jDialogTamboresGeneral.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            if (validacion) {
                JOptionPane.showMessageDialog(null, "No se pudo cambiar la trazabilidad de algunos tambores", "Validación", JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Todos los tambores fueron modificados con éxito", "Validación", JOptionPane.INFORMATION_MESSAGE);
            }

            tamborList.clear();
            tamborList.addAll(tamborQuery.getResultList());

        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un Tambor", "Validación", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jBTrazarActionPerformed

    private void jBVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVolverActionPerformed
        this.processWindowEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));        // TODO add your handling code here:
    }//GEN-LAST:event_jBVolverActionPerformed

    private void jBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarActionPerformed

        Proveedor provSel = proveedorList.get(jCBProveedor.getSelectedIndex());
        Cliente cliSel = clienteList.get(jCBCliente.getSelectedIndex());
        Sector secSel = sectorList.get(jCBSector.getSelectedIndex());
        Lote loteSel = loteList.get(jCBLote.getSelectedIndex());
        Color colSel = colorList.get(this.jCBColor.getSelectedIndex());
        Date fecha = null;

        Query ql;
        String queryTxt = "SELECT t FROM Tambor t WHERE 1=1 ";

        if (!this.dateChooser.getText().isEmpty()) {
            try {
                String fechaS = this.dateChooser.getText();
                fecha = (Date) new SimpleDateFormat("dd/MM/yy").parse(fechaS);

            } catch (ParseException ex) {
                Logger.getLogger(jDialogDescargas.class.getName()).log(Level.SEVERE, null, ex);
                fecha = null;
            }

            if (fecha != null) {
                queryTxt = queryTxt + " AND  t.idDescarga.fecha = :pFecha ";
            }
        }

        if (!this.jTFNumero.getText().isEmpty()) {
            int numero = Integer.parseInt(this.jTFNumero.getText());
            queryTxt = queryTxt + " AND t.numero like " + numero + "";
        }
        int coma = 0;
        if (!this.jTFSenasa.getText().isEmpty()) {
            String senasa = this.jTFSenasa.getText();
            coma = senasa.length() - 1;
            if (senasa.charAt(coma) == ',') {
                senasa = senasa.substring(0, coma);
            }
            queryTxt = queryTxt + " AND (t.senasa In (" + senasa + ") OR t.senasanueva In (" + senasa + "))";
        }
        if (!this.jTFContrato.getText().isEmpty()) {
            String contrato = this.jTFContrato.getText();
            queryTxt = queryTxt + " AND t.idLote.idLoteContrato.idContrato.numero like '%" + contrato + "%'";
        }
        String Traz = this.jCBTrazado.getSelectedItem().toString();
        if (Traz.equals("Si")) {
            queryTxt = queryTxt + " AND t.trazabilidad = 1 ";
        } else if (Traz.equals("No")) {
            queryTxt = queryTxt + " AND t.trazabilidad = 0 ";
        }

        String est = this.jCBEstado.getSelectedItem().toString().toLowerCase();
        if (est.equals("en stock")) {
            queryTxt = queryTxt + " AND t.estado != 'despachado' ";
        } else if (!est.equals("todos")) {
            queryTxt = queryTxt + " AND t.estado = :pEstado";
        }

        if (!colSel.getColor().equals("Todos")) {
            queryTxt = queryTxt + " AND t.idColor=:pColor ";
        }
        if (!secSel.getNombre().equals("Todos")) {
            queryTxt = queryTxt + " AND t.idSector=:pSector ";
        }
        if (!loteSel.getLote().equals("Todos")) {
            queryTxt = queryTxt + " AND t.idLote=:pLote ";
        }

        if (!cliSel.getRazonSocial().equals("Todos")) {
            queryTxt = queryTxt + " AND t.idLote.idLoteContrato.idContrato.idCliente = :pCliente ";
        }

        if (!provSel.getRazonSocial().equals("Todos")) {
            queryTxt = queryTxt + " AND t.idProveedor=:pProv ";
        }

        ql = em.createQuery(queryTxt);

        if (fecha != null) {
            ql.setParameter("pFecha", fecha);
        }

        if (!colSel.getColor().equals("Todos")) {
            ql.setParameter("pColor", colSel);
        }
        if (!secSel.getNombre().equals("Todos")) {
            ql.setParameter("pSector", secSel);
        }
        if (!loteSel.getLote().equals("Todos")) {
            ql.setParameter("pLote", loteSel);
        }
        if (!cliSel.getRazonSocial().equals("Todos")) {
            ql.setParameter("pCliente", cliSel);
        }

        if (!provSel.getRazonSocial().equals("Todos")) {
            ql.setParameter("pProv", provSel);
        }

        if ((!est.equals("en stock")) && (!est.equals("todos"))) {
            ql.setParameter("pEstado", est);
        }

        tamborQuery = java.beans.Beans.isDesignTime() ? null : ql;
        tamborList.clear();
        tamborList.addAll(tamborQuery.getResultList());
    }//GEN-LAST:event_jBBuscarActionPerformed

    private void jCBSectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBSectorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBSectorActionPerformed

    private void jBCambiarProductor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCambiarProductor1ActionPerformed

        if (this.jTableTambores.getSelectedRowCount() != 0) {
            tambor.clear();
            for (int i = 0; i < jTableTambores.getRowCount(); i++) {
                if (jTableTambores.isRowSelected(i)) {
                    tambor.add(tamborList.get(i));
                }
            }
            int reply = JOptionPane.showConfirmDialog(null, jCBProveedor, "Selecione el Apicultor", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {
                provSel = (Proveedor) jCBProveedor.getSelectedItem();
                for (int i = 0; i < tambor.size(); i++) {
                    tamborSel = (Tambor) tambor.get(i);
                    tamborSel.setIdProveedor(provSel);
                    try {
                        controladorT.edit(tamborSel);
                    } catch (Exception ex) {
                        Logger.getLogger(jDialogTamboresGeneral.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            tamborList.clear();
            tamborList.addAll(tamborQuery.getResultList());

        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un Tambor", "Validación", JOptionPane.WARNING_MESSAGE);
        }
        tamborList.clear();
        tamborList.addAll(tamborQuery.getResultList());
    }//GEN-LAST:event_jBCambiarProductor1ActionPerformed

    public void calculaSeleccion() {
        Tambor t = new Tambor();
        int cantidad = 0;
        float totHumedad = 0;
        float humedad = 0;
        float color = 0;
        float totColor = 0;
        float peso = 0;
        float totPeso = 0;

        for (int i = 0; i < jTableTambores.getRowCount(); i++) {

            if (jTableTambores.isRowSelected(i)) {
                cantidad++;
                t = (Tambor) tamborList.get(i);
                //Suma humedades
                try {
                    humedad = t.getHumedad();
                } catch (Exception e) {
                    humedad = 0;
                }
                totHumedad = totHumedad + humedad;

                //Suma Colores
                try {
                    color = Float.parseFloat(t.getIdColor().getColor());
                } catch (Exception e) {
                    color = 0;
                }
                totColor = totColor + color;

                //Suma Pesos
                try {
                    peso = t.getNeto();
                } catch (Exception e) {
                    peso = 0;
                }
                totPeso = totPeso + peso;
            }
        }
        if (cantidad > 0) {

            totHumedad = totHumedad / cantidad;
            totColor = totColor / cantidad;

        }
        DecimalFormat formato1 = new DecimalFormat("#.00");

        this.jTextCantidad.setText(Integer.toString(cantidad));
        this.jTextPeso.setText(formato1.format(totPeso));
        this.jTextColor.setText(formato1.format(totColor));
        this.jTextHumedad.setText(formato1.format(totHumedad));

    }

//    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jDialogTamboresGeneral.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jDialogTamboresGeneral.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jDialogTamboresGeneral.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jDialogTamboresGeneral.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jDialogTamboresGeneral dialog = new jDialogTamboresGeneral(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Cantidad;
    private javax.swing.JLabel Cantidad1;
    private javax.swing.JLabel Cantidad2;
    private javax.swing.JLabel Cantidad3;
    private javax.persistence.EntityManager SegTAPUEntityManager;
    private java.util.List<segta.clases.Cliente> clienteList;
    private javax.persistence.Query clienteQuery;
    private java.util.List<segta.clases.Color> colorList;
    private javax.persistence.Query colorQuery;
    private datechooser.beans.DateChooserCombo dateChooser;
    private javax.swing.JButton jBBuscar;
    private javax.swing.JButton jBCambiarProductor;
    private javax.swing.JButton jBCambiarProductor1;
    private javax.swing.JButton jBCambiarSector;
    private javax.swing.JButton jBCambiarSector1;
    private javax.swing.JButton jBTrazar;
    private javax.swing.JButton jBVolver;
    private javax.swing.JComboBox<String> jCBCliente;
    private javax.swing.JComboBox<String> jCBColor;
    private javax.swing.JComboBox<String> jCBEstado;
    private javax.swing.JComboBox<String> jCBLote;
    private javax.swing.JComboBox<String> jCBProveedor;
    private javax.swing.JComboBox<String> jCBSector;
    private javax.swing.JComboBox<String> jCBTrazado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFContrato;
    private javax.swing.JTextField jTFNumero;
    private javax.swing.JTextField jTFSenasa;
    private javax.swing.JTable jTableTambores;
    private javax.swing.JTextField jTextCantidad;
    private javax.swing.JTextField jTextColor;
    private javax.swing.JTextField jTextHumedad;
    private javax.swing.JTextField jTextPeso;
    private java.util.List<segta.clases.Lote> loteList;
    private javax.persistence.Query loteQuery;
    private java.util.List<segta.clases.Proveedor> proveedorList;
    private java.util.List<segta.clases.Proveedor> proveedorList1;
    private javax.persistence.Query proveedorQuery;
    private javax.persistence.Query proveedorQuery1;
    private java.util.List<segta.clases.Sector> sectorList;
    private java.util.List<segta.clases.Sector> sectorList1;
    private javax.persistence.Query sectorQuery;
    private javax.persistence.Query sectorQuery1;
    private java.util.List<segta.clases.Tambor> tamborList;
    private javax.persistence.Query tamborQuery;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
